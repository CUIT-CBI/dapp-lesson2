{
	"id": "89f1353435dfa807d5764608c2b6f728",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Swap.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract Swap is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    // ERC20规范定义的变量\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    mapping(address => uint256) public balanceOf;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    // 实现手续费功能，千分之三手续费\r\n    uint256 public fee = 3;\r\n\r\n    // 实现滑点功能\r\n    uint256 public slippage;\r\n\r\n    constructor(string memory _name, string memory _symbol, uint8 _decimals) public {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n    }\r\n\r\n    // 增加流动性\r\n    function mint(address account, uint256 amount) public onlyOwner {\r\n        require(amount > 0, \"Cannot mint zero or negative tokens.\");\r\n        balanceOf[account] = balanceOf[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    // 移出流动性\r\n    function burn(address account, uint256 amount) public onlyOwner {\r\n        require(balanceOf[account] >= amount, \"Not enough balance.\");\r\n        balanceOf[account] = balanceOf[account].sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    // 交易功能\r\n    function transfer(address to, uint256 value) public {\r\n        require(balanceOf[msg.sender] >= value.mul(1000).div(1000 + fee), \"Not enough balance.\");\r\n        require(balanceOf[to] + value <= balanceOf[to].add(value).mul(1000 + slippage).div(1000), \"Exceeds slippage rate.\");\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(value.mul(1000).div(1000 + fee));\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(msg.sender, to, value);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b01f8043c21a192f9908d1fc91dc38715870eaa246b85168ac5836ba3300b7d764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b01f8043c21a192f9908d1fc91dc38715870eaa246b85168ac5836ba3300b7d764736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x1F DUP1 NUMBER 0xC2 BYTE NOT 0x2F SWAP10 ADDMOD 0xD1 0xFC SWAP2 0xDC CODESIZE PUSH18 0x5870EAA246B85168AC5836BA3300B7D76473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "707:3748:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b01f8043c21a192f9908d1fc91dc38715870eaa246b85168ac5836ba3300b7d764736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0x1F DUP1 NUMBER 0xC2 BYTE NOT 0x2F SWAP10 ADDMOD 0xD1 0xFC SWAP2 0xDC CODESIZE PUSH18 0x5870EAA246B85168AC5836BA3300B7D76473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "707:3748:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b01f8043c21a192f9908d1fc91dc38715870eaa246b85168ac5836ba3300b7d764736f6c63430008110033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB4 PC 0x28 0xC2 PC SELFDESTRUCT 0xD 0xE3 0xC4 PUSH21 0xA9E78BF6BCE8432946ABA56FB38804B64E37FF1E6F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "194:8111:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047b45828c258ff0de3c474a9e78bf6bce8432946aba56fb38804b64e37ff1e6f64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xD0 PUSH23 0x51984B2AA7B865C0E9F742CDF7BD9D8D00FF50EEA18F19 0xF7 GAS PC PUSH4 0x59AA6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "482:6300:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fd07651984b2aa7b865c0e9f742cdf7bd9d8d00ff50eea18f19f75a586359aa64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Swap.sol": {
				"Swap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "_decimals",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slippage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Swap.sol\":249:1962  contract Swap is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Swap.sol\":637:638  3 */\n  0x03\n    /* \"contracts/Swap.sol\":616:638  uint256 public fee = 3 */\n  0x05\n  sstore\n    /* \"contracts/Swap.sol\":706:875  constructor(string memory _name, string memory _symbol, uint8 _decimals) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Swap.sol\":804:809  _name */\n  dup3\n    /* \"contracts/Swap.sol\":797:801  name */\n  0x01\n    /* \"contracts/Swap.sol\":797:809  name = _name */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/Swap.sol\":829:836  _symbol */\n  dup2\n    /* \"contracts/Swap.sol\":820:826  symbol */\n  0x02\n    /* \"contracts/Swap.sol\":820:836  symbol = _symbol */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/Swap.sol\":858:867  _decimals */\n  dup1\n    /* \"contracts/Swap.sol\":847:855  decimals */\n  0x03\n  0x00\n    /* \"contracts/Swap.sol\":847:867  decimals = _decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Swap.sol\":706:875  constructor(string memory _name, string memory _symbol, uint8 _decimals) public {... */\n  pop\n  pop\n  pop\n    /* \"contracts/Swap.sol\":249:1962  contract Swap is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_18:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_20:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_21:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_22:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_23:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_24:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_25:\n    /* \"#utility.yul\":957:984   */\n  tag_62\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_23\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_64\n  tag_24\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1030:1118   */\ntag_63:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_26:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_66\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_67\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_25\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_27:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_70\n  tag_24\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1434:1490   */\ntag_69:\n    /* \"#utility.yul\":1508:1537   */\n  tag_71\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_23\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_28:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_73:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_29:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_77\n    /* \"#utility.yul\":1992:2041   */\n  tag_78\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_27\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1976:2042   */\n  tag_26\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_80\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2117:2229   */\ntag_79:\n    /* \"#utility.yul\":2238:2290   */\n  tag_81\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_28\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_30:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_84\n  tag_21\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2399:2521   */\ntag_83:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_85\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2763   */\ntag_31:\n    /* \"#utility.yul\":2712:2719   */\n  0x00\n    /* \"#utility.yul\":2752:2756   */\n  0xff\n    /* \"#utility.yul\":2745:2750   */\n  dup3\n    /* \"#utility.yul\":2741:2757   */\n  and\n    /* \"#utility.yul\":2730:2757   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2763   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2769:2887   */\ntag_32:\n    /* \"#utility.yul\":2840:2862   */\n  tag_88\n    /* \"#utility.yul\":2856:2861   */\n  dup2\n    /* \"#utility.yul\":2840:2862   */\n  tag_31\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2833:2838   */\n  dup2\n    /* \"#utility.yul\":2830:2863   */\n  eq\n    /* \"#utility.yul\":2820:2881   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2877:2878   */\n  0x00\n    /* \"#utility.yul\":2874:2875   */\n  dup1\n    /* \"#utility.yul\":2867:2879   */\n  revert\n    /* \"#utility.yul\":2820:2881   */\ntag_89:\n    /* \"#utility.yul\":2769:2887   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2893:3032   */\ntag_33:\n    /* \"#utility.yul\":2948:2953   */\n  0x00\n    /* \"#utility.yul\":2979:2985   */\n  dup2\n    /* \"#utility.yul\":2973:2986   */\n  mload\n    /* \"#utility.yul\":2964:2986   */\n  swap1\n  pop\n    /* \"#utility.yul\":2995:3026   */\n  tag_91\n    /* \"#utility.yul\":3020:3025   */\n  dup2\n    /* \"#utility.yul\":2995:3026   */\n  tag_32\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2893:3032   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3038:4043   */\ntag_3:\n    /* \"#utility.yul\":3144:3150   */\n  0x00\n    /* \"#utility.yul\":3152:3158   */\n  dup1\n    /* \"#utility.yul\":3160:3166   */\n  0x00\n    /* \"#utility.yul\":3209:3211   */\n  0x60\n    /* \"#utility.yul\":3197:3206   */\n  dup5\n    /* \"#utility.yul\":3188:3195   */\n  dup7\n    /* \"#utility.yul\":3184:3207   */\n  sub\n    /* \"#utility.yul\":3180:3212   */\n  slt\n    /* \"#utility.yul\":3177:3296   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3215:3294   */\n  tag_94\n  tag_19\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3177:3296   */\ntag_93:\n    /* \"#utility.yul\":3356:3357   */\n  0x00\n    /* \"#utility.yul\":3345:3354   */\n  dup5\n    /* \"#utility.yul\":3341:3358   */\n  add\n    /* \"#utility.yul\":3335:3359   */\n  mload\n    /* \"#utility.yul\":3386:3404   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3378:3384   */\n  dup2\n    /* \"#utility.yul\":3375:3405   */\n  gt\n    /* \"#utility.yul\":3372:3489   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3408:3487   */\n  tag_96\n  tag_20\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3372:3489   */\ntag_95:\n    /* \"#utility.yul\":3513:3587   */\n  tag_97\n    /* \"#utility.yul\":3579:3586   */\n  dup7\n    /* \"#utility.yul\":3570:3576   */\n  dup3\n    /* \"#utility.yul\":3559:3568   */\n  dup8\n    /* \"#utility.yul\":3555:3577   */\n  add\n    /* \"#utility.yul\":3513:3587   */\n  tag_30\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3503:3587   */\n  swap4\n  pop\n    /* \"#utility.yul\":3306:3597   */\n  pop\n    /* \"#utility.yul\":3657:3659   */\n  0x20\n    /* \"#utility.yul\":3646:3655   */\n  dup5\n    /* \"#utility.yul\":3642:3660   */\n  add\n    /* \"#utility.yul\":3636:3661   */\n  mload\n    /* \"#utility.yul\":3688:3706   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3680:3686   */\n  dup2\n    /* \"#utility.yul\":3677:3707   */\n  gt\n    /* \"#utility.yul\":3674:3791   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3710:3789   */\n  tag_99\n  tag_20\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3674:3791   */\ntag_98:\n    /* \"#utility.yul\":3815:3889   */\n  tag_100\n    /* \"#utility.yul\":3881:3888   */\n  dup7\n    /* \"#utility.yul\":3872:3878   */\n  dup3\n    /* \"#utility.yul\":3861:3870   */\n  dup8\n    /* \"#utility.yul\":3857:3879   */\n  add\n    /* \"#utility.yul\":3815:3889   */\n  tag_30\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3805:3889   */\n  swap3\n  pop\n    /* \"#utility.yul\":3607:3899   */\n  pop\n    /* \"#utility.yul\":3938:3940   */\n  0x40\n    /* \"#utility.yul\":3964:4026   */\n  tag_101\n    /* \"#utility.yul\":4018:4025   */\n  dup7\n    /* \"#utility.yul\":4009:4015   */\n  dup3\n    /* \"#utility.yul\":3998:4007   */\n  dup8\n    /* \"#utility.yul\":3994:4016   */\n  add\n    /* \"#utility.yul\":3964:4026   */\n  tag_33\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3954:4026   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:4036   */\n  pop\n    /* \"#utility.yul\":3038:4043   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4049:4148   */\ntag_34:\n    /* \"#utility.yul\":4101:4107   */\n  0x00\n    /* \"#utility.yul\":4135:4140   */\n  dup2\n    /* \"#utility.yul\":4129:4141   */\n  mload\n    /* \"#utility.yul\":4119:4141   */\n  swap1\n  pop\n    /* \"#utility.yul\":4049:4148   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4154:4334   */\ntag_35:\n    /* \"#utility.yul\":4202:4279   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4199:4200   */\n  0x00\n    /* \"#utility.yul\":4192:4280   */\n  mstore\n    /* \"#utility.yul\":4299:4303   */\n  0x22\n    /* \"#utility.yul\":4296:4297   */\n  0x04\n    /* \"#utility.yul\":4289:4304   */\n  mstore\n    /* \"#utility.yul\":4323:4327   */\n  0x24\n    /* \"#utility.yul\":4320:4321   */\n  0x00\n    /* \"#utility.yul\":4313:4328   */\n  revert\n    /* \"#utility.yul\":4340:4660   */\ntag_36:\n    /* \"#utility.yul\":4384:4390   */\n  0x00\n    /* \"#utility.yul\":4421:4422   */\n  0x02\n    /* \"#utility.yul\":4415:4419   */\n  dup3\n    /* \"#utility.yul\":4411:4423   */\n  div\n    /* \"#utility.yul\":4401:4423   */\n  swap1\n  pop\n    /* \"#utility.yul\":4468:4469   */\n  0x01\n    /* \"#utility.yul\":4462:4466   */\n  dup3\n    /* \"#utility.yul\":4458:4470   */\n  and\n    /* \"#utility.yul\":4489:4507   */\n  dup1\n    /* \"#utility.yul\":4479:4560   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4545:4549   */\n  0x7f\n    /* \"#utility.yul\":4537:4543   */\n  dup3\n    /* \"#utility.yul\":4533:4550   */\n  and\n    /* \"#utility.yul\":4523:4550   */\n  swap2\n  pop\n    /* \"#utility.yul\":4479:4560   */\ntag_105:\n    /* \"#utility.yul\":4607:4609   */\n  0x20\n    /* \"#utility.yul\":4599:4605   */\n  dup3\n    /* \"#utility.yul\":4596:4610   */\n  lt\n    /* \"#utility.yul\":4576:4594   */\n  dup2\n    /* \"#utility.yul\":4573:4611   */\n  sub\n    /* \"#utility.yul\":4570:4654   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4626:4644   */\n  tag_107\n  tag_35\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4570:4654   */\ntag_106:\n    /* \"#utility.yul\":4391:4660   */\n  pop\n    /* \"#utility.yul\":4340:4660   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4666:4807   */\ntag_37:\n    /* \"#utility.yul\":4715:4719   */\n  0x00\n    /* \"#utility.yul\":4738:4741   */\n  dup2\n    /* \"#utility.yul\":4730:4741   */\n  swap1\n  pop\n    /* \"#utility.yul\":4761:4764   */\n  dup2\n    /* \"#utility.yul\":4758:4759   */\n  0x00\n    /* \"#utility.yul\":4751:4765   */\n  mstore\n    /* \"#utility.yul\":4795:4799   */\n  0x20\n    /* \"#utility.yul\":4792:4793   */\n  0x00\n    /* \"#utility.yul\":4782:4800   */\n  keccak256\n    /* \"#utility.yul\":4774:4800   */\n  swap1\n  pop\n    /* \"#utility.yul\":4666:4807   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4813:4906   */\ntag_38:\n    /* \"#utility.yul\":4850:4856   */\n  0x00\n    /* \"#utility.yul\":4897:4899   */\n  0x20\n    /* \"#utility.yul\":4892:4894   */\n  0x1f\n    /* \"#utility.yul\":4885:4890   */\n  dup4\n    /* \"#utility.yul\":4881:4895   */\n  add\n    /* \"#utility.yul\":4877:4900   */\n  div\n    /* \"#utility.yul\":4867:4900   */\n  swap1\n  pop\n    /* \"#utility.yul\":4813:4906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4912:5019   */\ntag_39:\n    /* \"#utility.yul\":4956:4964   */\n  0x00\n    /* \"#utility.yul\":5006:5011   */\n  dup3\n    /* \"#utility.yul\":5000:5004   */\n  dup3\n    /* \"#utility.yul\":4996:5012   */\n  shl\n    /* \"#utility.yul\":4975:5012   */\n  swap1\n  pop\n    /* \"#utility.yul\":4912:5019   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5025:5418   */\ntag_40:\n    /* \"#utility.yul\":5094:5100   */\n  0x00\n    /* \"#utility.yul\":5144:5145   */\n  0x08\n    /* \"#utility.yul\":5132:5142   */\n  dup4\n    /* \"#utility.yul\":5128:5146   */\n  mul\n    /* \"#utility.yul\":5167:5264   */\n  tag_112\n    /* \"#utility.yul\":5197:5263   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5186:5195   */\n  dup3\n    /* \"#utility.yul\":5167:5264   */\n  tag_39\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5285:5324   */\n  tag_113\n    /* \"#utility.yul\":5315:5323   */\n  dup7\n    /* \"#utility.yul\":5304:5313   */\n  dup4\n    /* \"#utility.yul\":5285:5324   */\n  tag_39\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5273:5324   */\n  swap6\n  pop\n    /* \"#utility.yul\":5357:5361   */\n  dup1\n    /* \"#utility.yul\":5353:5362   */\n  not\n    /* \"#utility.yul\":5346:5351   */\n  dup5\n    /* \"#utility.yul\":5342:5363   */\n  and\n    /* \"#utility.yul\":5333:5363   */\n  swap4\n  pop\n    /* \"#utility.yul\":5406:5410   */\n  dup1\n    /* \"#utility.yul\":5396:5404   */\n  dup7\n    /* \"#utility.yul\":5392:5411   */\n  and\n    /* \"#utility.yul\":5385:5390   */\n  dup5\n    /* \"#utility.yul\":5382:5412   */\n  or\n    /* \"#utility.yul\":5372:5412   */\n  swap3\n  pop\n    /* \"#utility.yul\":5101:5418   */\n  pop\n  pop\n    /* \"#utility.yul\":5025:5418   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5424:5501   */\ntag_41:\n    /* \"#utility.yul\":5461:5468   */\n  0x00\n    /* \"#utility.yul\":5490:5495   */\n  dup2\n    /* \"#utility.yul\":5479:5495   */\n  swap1\n  pop\n    /* \"#utility.yul\":5424:5501   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5507:5567   */\ntag_42:\n    /* \"#utility.yul\":5535:5538   */\n  0x00\n    /* \"#utility.yul\":5556:5561   */\n  dup2\n    /* \"#utility.yul\":5549:5561   */\n  swap1\n  pop\n    /* \"#utility.yul\":5507:5567   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5573:5715   */\ntag_43:\n    /* \"#utility.yul\":5623:5632   */\n  0x00\n    /* \"#utility.yul\":5656:5709   */\n  tag_117\n    /* \"#utility.yul\":5674:5708   */\n  tag_118\n    /* \"#utility.yul\":5683:5707   */\n  tag_119\n    /* \"#utility.yul\":5701:5706   */\n  dup5\n    /* \"#utility.yul\":5683:5707   */\n  tag_41\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5674:5708   */\n  tag_42\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5656:5709   */\n  tag_41\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5643:5709   */\n  swap1\n  pop\n    /* \"#utility.yul\":5573:5715   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5721:5796   */\ntag_44:\n    /* \"#utility.yul\":5764:5767   */\n  0x00\n    /* \"#utility.yul\":5785:5790   */\n  dup2\n    /* \"#utility.yul\":5778:5790   */\n  swap1\n  pop\n    /* \"#utility.yul\":5721:5796   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5802:6071   */\ntag_45:\n    /* \"#utility.yul\":5912:5951   */\n  tag_122\n    /* \"#utility.yul\":5943:5950   */\n  dup4\n    /* \"#utility.yul\":5912:5951   */\n  tag_43\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5973:6064   */\n  tag_123\n    /* \"#utility.yul\":6022:6063   */\n  tag_124\n    /* \"#utility.yul\":6046:6062   */\n  dup3\n    /* \"#utility.yul\":6022:6063   */\n  tag_44\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6014:6020   */\n  dup5\n    /* \"#utility.yul\":6007:6011   */\n  dup5\n    /* \"#utility.yul\":6001:6012   */\n  sload\n    /* \"#utility.yul\":5973:6064   */\n  tag_40\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5967:5971   */\n  dup3\n    /* \"#utility.yul\":5960:6065   */\n  sstore\n    /* \"#utility.yul\":5878:6071   */\n  pop\n    /* \"#utility.yul\":5802:6071   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6077:6150   */\ntag_46:\n    /* \"#utility.yul\":6122:6125   */\n  0x00\n    /* \"#utility.yul\":6077:6150   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6156:6345   */\ntag_47:\n    /* \"#utility.yul\":6233:6265   */\n  tag_127\n  tag_46\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6274:6339   */\n  tag_128\n    /* \"#utility.yul\":6332:6338   */\n  dup2\n    /* \"#utility.yul\":6324:6330   */\n  dup5\n    /* \"#utility.yul\":6318:6322   */\n  dup5\n    /* \"#utility.yul\":6274:6339   */\n  tag_45\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6209:6345   */\n  pop\n    /* \"#utility.yul\":6156:6345   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6351:6537   */\ntag_48:\n    /* \"#utility.yul\":6411:6531   */\ntag_130:\n    /* \"#utility.yul\":6428:6431   */\n  dup2\n    /* \"#utility.yul\":6421:6426   */\n  dup2\n    /* \"#utility.yul\":6418:6432   */\n  lt\n    /* \"#utility.yul\":6411:6531   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":6482:6521   */\n  tag_133\n    /* \"#utility.yul\":6519:6520   */\n  0x00\n    /* \"#utility.yul\":6512:6517   */\n  dup3\n    /* \"#utility.yul\":6482:6521   */\n  tag_47\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6455:6456   */\n  0x01\n    /* \"#utility.yul\":6448:6453   */\n  dup2\n    /* \"#utility.yul\":6444:6457   */\n  add\n    /* \"#utility.yul\":6435:6457   */\n  swap1\n  pop\n    /* \"#utility.yul\":6411:6531   */\n  jump(tag_130)\ntag_132:\n    /* \"#utility.yul\":6351:6537   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6543:7086   */\ntag_49:\n    /* \"#utility.yul\":6644:6646   */\n  0x1f\n    /* \"#utility.yul\":6639:6642   */\n  dup3\n    /* \"#utility.yul\":6636:6647   */\n  gt\n    /* \"#utility.yul\":6633:7079   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":6678:6716   */\n  tag_136\n    /* \"#utility.yul\":6710:6715   */\n  dup2\n    /* \"#utility.yul\":6678:6716   */\n  tag_37\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6762:6791   */\n  tag_137\n    /* \"#utility.yul\":6780:6790   */\n  dup5\n    /* \"#utility.yul\":6762:6791   */\n  tag_38\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6752:6760   */\n  dup2\n    /* \"#utility.yul\":6748:6792   */\n  add\n    /* \"#utility.yul\":6945:6947   */\n  0x20\n    /* \"#utility.yul\":6933:6943   */\n  dup6\n    /* \"#utility.yul\":6930:6948   */\n  lt\n    /* \"#utility.yul\":6927:6976   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6966:6974   */\n  dup2\n    /* \"#utility.yul\":6951:6974   */\n  swap1\n  pop\n    /* \"#utility.yul\":6927:6976   */\ntag_138:\n    /* \"#utility.yul\":6989:7069   */\n  tag_139\n    /* \"#utility.yul\":7045:7067   */\n  tag_140\n    /* \"#utility.yul\":7063:7066   */\n  dup6\n    /* \"#utility.yul\":7045:7067   */\n  tag_38\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7035:7043   */\n  dup4\n    /* \"#utility.yul\":7031:7068   */\n  add\n    /* \"#utility.yul\":7018:7029   */\n  dup3\n    /* \"#utility.yul\":6989:7069   */\n  tag_48\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6648:7079   */\n  pop\n  pop\n    /* \"#utility.yul\":6633:7079   */\ntag_135:\n    /* \"#utility.yul\":6543:7086   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7092:7209   */\ntag_50:\n    /* \"#utility.yul\":7146:7154   */\n  0x00\n    /* \"#utility.yul\":7196:7201   */\n  dup3\n    /* \"#utility.yul\":7190:7194   */\n  dup3\n    /* \"#utility.yul\":7186:7202   */\n  shr\n    /* \"#utility.yul\":7165:7202   */\n  swap1\n  pop\n    /* \"#utility.yul\":7092:7209   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7215:7384   */\ntag_51:\n    /* \"#utility.yul\":7259:7265   */\n  0x00\n    /* \"#utility.yul\":7292:7343   */\n  tag_143\n    /* \"#utility.yul\":7340:7341   */\n  0x00\n    /* \"#utility.yul\":7336:7342   */\n  not\n    /* \"#utility.yul\":7328:7333   */\n  dup5\n    /* \"#utility.yul\":7325:7326   */\n  0x08\n    /* \"#utility.yul\":7321:7334   */\n  mul\n    /* \"#utility.yul\":7292:7343   */\n  tag_50\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7288:7344   */\n  not\n    /* \"#utility.yul\":7373:7377   */\n  dup1\n    /* \"#utility.yul\":7367:7371   */\n  dup4\n    /* \"#utility.yul\":7363:7378   */\n  and\n    /* \"#utility.yul\":7353:7378   */\n  swap2\n  pop\n    /* \"#utility.yul\":7266:7384   */\n  pop\n    /* \"#utility.yul\":7215:7384   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7389:7684   */\ntag_52:\n    /* \"#utility.yul\":7465:7469   */\n  0x00\n    /* \"#utility.yul\":7611:7640   */\n  tag_145\n    /* \"#utility.yul\":7636:7639   */\n  dup4\n    /* \"#utility.yul\":7630:7634   */\n  dup4\n    /* \"#utility.yul\":7611:7640   */\n  tag_51\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7603:7640   */\n  swap2\n  pop\n    /* \"#utility.yul\":7673:7676   */\n  dup3\n    /* \"#utility.yul\":7670:7671   */\n  0x02\n    /* \"#utility.yul\":7666:7677   */\n  mul\n    /* \"#utility.yul\":7660:7664   */\n  dup3\n    /* \"#utility.yul\":7657:7678   */\n  or\n    /* \"#utility.yul\":7649:7678   */\n  swap1\n  pop\n    /* \"#utility.yul\":7389:7684   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7689:9084   */\ntag_13:\n    /* \"#utility.yul\":7806:7843   */\n  tag_147\n    /* \"#utility.yul\":7839:7842   */\n  dup3\n    /* \"#utility.yul\":7806:7843   */\n  tag_34\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":7908:7926   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7900:7906   */\n  dup2\n    /* \"#utility.yul\":7897:7927   */\n  gt\n    /* \"#utility.yul\":7894:7950   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":7930:7948   */\n  tag_149\n  tag_24\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7894:7950   */\ntag_148:\n    /* \"#utility.yul\":7974:8012   */\n  tag_150\n    /* \"#utility.yul\":8006:8010   */\n  dup3\n    /* \"#utility.yul\":8000:8011   */\n  sload\n    /* \"#utility.yul\":7974:8012   */\n  tag_36\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":8059:8126   */\n  tag_151\n    /* \"#utility.yul\":8119:8125   */\n  dup3\n    /* \"#utility.yul\":8111:8117   */\n  dup3\n    /* \"#utility.yul\":8105:8109   */\n  dup6\n    /* \"#utility.yul\":8059:8126   */\n  tag_49\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8153:8154   */\n  0x00\n    /* \"#utility.yul\":8177:8181   */\n  0x20\n    /* \"#utility.yul\":8164:8181   */\n  swap1\n  pop\n    /* \"#utility.yul\":8209:8211   */\n  0x1f\n    /* \"#utility.yul\":8201:8207   */\n  dup4\n    /* \"#utility.yul\":8198:8212   */\n  gt\n    /* \"#utility.yul\":8226:8227   */\n  0x01\n    /* \"#utility.yul\":8221:8839   */\n  dup2\n  eq\n  tag_153\n  jumpi\n    /* \"#utility.yul\":8883:8884   */\n  0x00\n    /* \"#utility.yul\":8900:8906   */\n  dup5\n    /* \"#utility.yul\":8897:8974   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8949:8958   */\n  dup3\n    /* \"#utility.yul\":8944:8947   */\n  dup8\n    /* \"#utility.yul\":8940:8959   */\n  add\n    /* \"#utility.yul\":8934:8960   */\n  mload\n    /* \"#utility.yul\":8925:8960   */\n  swap1\n  pop\n    /* \"#utility.yul\":8897:8974   */\ntag_154:\n    /* \"#utility.yul\":9000:9067   */\n  tag_155\n    /* \"#utility.yul\":9060:9066   */\n  dup6\n    /* \"#utility.yul\":9053:9058   */\n  dup3\n    /* \"#utility.yul\":9000:9067   */\n  tag_52\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":8994:8998   */\n  dup7\n    /* \"#utility.yul\":8987:9068   */\n  sstore\n    /* \"#utility.yul\":8856:9078   */\n  pop\n    /* \"#utility.yul\":8191:9078   */\n  jump(tag_152)\n    /* \"#utility.yul\":8221:8839   */\ntag_153:\n    /* \"#utility.yul\":8273:8277   */\n  0x1f\n    /* \"#utility.yul\":8269:8278   */\n  not\n    /* \"#utility.yul\":8261:8267   */\n  dup5\n    /* \"#utility.yul\":8257:8279   */\n  and\n    /* \"#utility.yul\":8307:8344   */\n  tag_156\n    /* \"#utility.yul\":8339:8343   */\n  dup7\n    /* \"#utility.yul\":8307:8344   */\n  tag_37\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8366:8367   */\n  0x00\n    /* \"#utility.yul\":8380:8588   */\ntag_157:\n    /* \"#utility.yul\":8394:8401   */\n  dup3\n    /* \"#utility.yul\":8391:8392   */\n  dup2\n    /* \"#utility.yul\":8388:8402   */\n  lt\n    /* \"#utility.yul\":8380:8588   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":8473:8482   */\n  dup5\n    /* \"#utility.yul\":8468:8471   */\n  dup10\n    /* \"#utility.yul\":8464:8483   */\n  add\n    /* \"#utility.yul\":8458:8484   */\n  mload\n    /* \"#utility.yul\":8450:8456   */\n  dup3\n    /* \"#utility.yul\":8443:8485   */\n  sstore\n    /* \"#utility.yul\":8524:8525   */\n  0x01\n    /* \"#utility.yul\":8516:8522   */\n  dup3\n    /* \"#utility.yul\":8512:8526   */\n  add\n    /* \"#utility.yul\":8502:8526   */\n  swap2\n  pop\n    /* \"#utility.yul\":8571:8573   */\n  0x20\n    /* \"#utility.yul\":8560:8569   */\n  dup6\n    /* \"#utility.yul\":8556:8574   */\n  add\n    /* \"#utility.yul\":8543:8574   */\n  swap5\n  pop\n    /* \"#utility.yul\":8417:8421   */\n  0x20\n    /* \"#utility.yul\":8414:8415   */\n  dup2\n    /* \"#utility.yul\":8410:8422   */\n  add\n    /* \"#utility.yul\":8405:8422   */\n  swap1\n  pop\n    /* \"#utility.yul\":8380:8588   */\n  jump(tag_157)\ntag_159:\n    /* \"#utility.yul\":8616:8622   */\n  dup7\n    /* \"#utility.yul\":8607:8614   */\n  dup4\n    /* \"#utility.yul\":8604:8623   */\n  lt\n    /* \"#utility.yul\":8601:8780   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":8674:8683   */\n  dup5\n    /* \"#utility.yul\":8669:8672   */\n  dup10\n    /* \"#utility.yul\":8665:8684   */\n  add\n    /* \"#utility.yul\":8659:8685   */\n  mload\n    /* \"#utility.yul\":8717:8765   */\n  tag_161\n    /* \"#utility.yul\":8759:8763   */\n  0x1f\n    /* \"#utility.yul\":8751:8757   */\n  dup10\n    /* \"#utility.yul\":8747:8764   */\n  and\n    /* \"#utility.yul\":8736:8745   */\n  dup3\n    /* \"#utility.yul\":8717:8765   */\n  tag_51\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":8709:8715   */\n  dup4\n    /* \"#utility.yul\":8702:8766   */\n  sstore\n    /* \"#utility.yul\":8624:8780   */\n  pop\n    /* \"#utility.yul\":8601:8780   */\ntag_160:\n    /* \"#utility.yul\":8826:8827   */\n  0x01\n    /* \"#utility.yul\":8822:8823   */\n  0x02\n    /* \"#utility.yul\":8814:8820   */\n  dup9\n    /* \"#utility.yul\":8810:8824   */\n  mul\n    /* \"#utility.yul\":8806:8828   */\n  add\n    /* \"#utility.yul\":8800:8804   */\n  dup9\n    /* \"#utility.yul\":8793:8829   */\n  sstore\n    /* \"#utility.yul\":8228:8839   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8191:9078   */\ntag_152:\n  pop\n    /* \"#utility.yul\":7781:9084   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7689:9084   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Swap.sol\":249:1962  contract Swap is Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Swap.sol\":249:1962  contract Swap is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3e032a3b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Swap.sol\":351:369  string public name */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Swap.sol\":403:424  uint8 public decimals */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Swap.sol\":674:697  uint256 public slippage */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Swap.sol\":907:1164  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/Swap.sol\":431:475  mapping(address => uint256) public balanceOf */\n    tag_7:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Swap.sol\":376:396  string public symbol */\n    tag_10:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Swap.sol\":1196:1454  function burn(address account, uint256 amount) public onlyOwner {... */\n    tag_11:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/Swap.sol\":1483:1959  function transfer(address to, uint256 value) public {... */\n    tag_12:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/Swap.sol\":616:638  uint256 public fee = 3 */\n    tag_13:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/Swap.sol\":351:369  string public name */\n    tag_17:\n      0x01\n      dup1\n      sload\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Swap.sol\":403:424  uint8 public decimals */\n    tag_21:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Swap.sol\":674:697  uint256 public slippage */\n    tag_25:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/Swap.sol\":907:1164  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/Swap.sol\":999:1000  0 */\n      0x00\n        /* \"contracts/Swap.sol\":990:996  amount */\n      dup2\n        /* \"contracts/Swap.sol\":990:1000  amount > 0 */\n      gt\n        /* \"contracts/Swap.sol\":982:1041  require(amount > 0, \"Cannot mint zero or negative tokens.\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/Swap.sol\":1073:1103  balanceOf[account].add(amount) */\n      tag_71\n        /* \"contracts/Swap.sol\":1096:1102  amount */\n      dup2\n        /* \"contracts/Swap.sol\":1073:1082  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1073:1091  balanceOf[account] */\n      0x00\n        /* \"contracts/Swap.sol\":1083:1090  account */\n      dup6\n        /* \"contracts/Swap.sol\":1073:1091  balanceOf[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Swap.sol\":1073:1095  balanceOf[account].add */\n      tag_72\n      swap1\n        /* \"contracts/Swap.sol\":1073:1103  balanceOf[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"contracts/Swap.sol\":1052:1061  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1052:1070  balanceOf[account] */\n      0x00\n        /* \"contracts/Swap.sol\":1062:1069  account */\n      dup5\n        /* \"contracts/Swap.sol\":1052:1070  balanceOf[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Swap.sol\":1052:1103  balanceOf[account] = balanceOf[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Swap.sol\":1140:1147  account */\n      dup2\n        /* \"contracts/Swap.sol\":1119:1156  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Swap.sol\":1136:1137  0 */\n      0x00\n        /* \"contracts/Swap.sol\":1119:1156  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Swap.sol\":1149:1155  amount */\n      dup4\n        /* \"contracts/Swap.sol\":1119:1156  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Swap.sol\":907:1164  function mint(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Swap.sol\":431:475  mapping(address => uint256) public balanceOf */\n    tag_35:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Swap.sol\":376:396  string public symbol */\n    tag_44:\n      0x02\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_59\n      jump\t// in\n    tag_80:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_59\n      jump\t// in\n    tag_81:\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_83\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_82)\n    tag_83:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_84:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_84\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Swap.sol\":1196:1454  function burn(address account, uint256 amount) public onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/Swap.sol\":1301:1307  amount */\n      dup1\n        /* \"contracts/Swap.sol\":1279:1288  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1279:1297  balanceOf[account] */\n      0x00\n        /* \"contracts/Swap.sol\":1289:1296  account */\n      dup5\n        /* \"contracts/Swap.sol\":1279:1297  balanceOf[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Swap.sol\":1279:1307  balanceOf[account] >= amount */\n      lt\n      iszero\n        /* \"contracts/Swap.sol\":1271:1331  require(balanceOf[account] >= amount, \"Not enough balance.\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/Swap.sol\":1363:1393  balanceOf[account].sub(amount) */\n      tag_91\n        /* \"contracts/Swap.sol\":1386:1392  amount */\n      dup2\n        /* \"contracts/Swap.sol\":1363:1372  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1363:1381  balanceOf[account] */\n      0x00\n        /* \"contracts/Swap.sol\":1373:1380  account */\n      dup6\n        /* \"contracts/Swap.sol\":1363:1381  balanceOf[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Swap.sol\":1363:1385  balanceOf[account].sub */\n      tag_92\n      swap1\n        /* \"contracts/Swap.sol\":1363:1393  balanceOf[account].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"contracts/Swap.sol\":1342:1351  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1342:1360  balanceOf[account] */\n      0x00\n        /* \"contracts/Swap.sol\":1352:1359  account */\n      dup5\n        /* \"contracts/Swap.sol\":1342:1360  balanceOf[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Swap.sol\":1342:1393  balanceOf[account] = balanceOf[account].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Swap.sol\":1435:1436  0 */\n      0x00\n        /* \"contracts/Swap.sol\":1409:1446  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Swap.sol\":1418:1425  account */\n      dup3\n        /* \"contracts/Swap.sol\":1409:1446  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Swap.sol\":1439:1445  amount */\n      dup4\n        /* \"contracts/Swap.sol\":1409:1446  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Swap.sol\":1196:1454  function burn(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Swap.sol\":1483:1959  function transfer(address to, uint256 value) public {... */\n    tag_51:\n        /* \"contracts/Swap.sol\":1579:1610  value.mul(1000).div(1000 + fee) */\n      tag_95\n        /* \"contracts/Swap.sol\":1606:1609  fee */\n      sload(0x05)\n        /* \"contracts/Swap.sol\":1599:1603  1000 */\n      0x03e8\n        /* \"contracts/Swap.sol\":1599:1609  1000 + fee */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"contracts/Swap.sol\":1579:1594  value.mul(1000) */\n      tag_98\n        /* \"contracts/Swap.sol\":1589:1593  1000 */\n      0x03e8\n        /* \"contracts/Swap.sol\":1579:1584  value */\n      dup5\n        /* \"contracts/Swap.sol\":1579:1588  value.mul */\n      tag_99\n      swap1\n        /* \"contracts/Swap.sol\":1579:1594  value.mul(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_98:\n        /* \"contracts/Swap.sol\":1579:1598  value.mul(1000).div */\n      tag_100\n      swap1\n        /* \"contracts/Swap.sol\":1579:1610  value.mul(1000).div(1000 + fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"contracts/Swap.sol\":1554:1563  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1554:1575  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/Swap.sol\":1564:1574  msg.sender */\n      caller\n        /* \"contracts/Swap.sol\":1554:1575  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Swap.sol\":1554:1610  balanceOf[msg.sender] >= value.mul(1000).div(1000 + fee) */\n      lt\n      iszero\n        /* \"contracts/Swap.sol\":1546:1634  require(balanceOf[msg.sender] >= value.mul(1000).div(1000 + fee), \"Not enough balance.\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_90\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"contracts/Swap.sol\":1678:1733  balanceOf[to].add(value).mul(1000 + slippage).div(1000) */\n      tag_103\n        /* \"contracts/Swap.sol\":1728:1732  1000 */\n      0x03e8\n        /* \"contracts/Swap.sol\":1678:1723  balanceOf[to].add(value).mul(1000 + slippage) */\n      tag_104\n        /* \"contracts/Swap.sol\":1714:1722  slippage */\n      sload(0x06)\n        /* \"contracts/Swap.sol\":1707:1711  1000 */\n      0x03e8\n        /* \"contracts/Swap.sol\":1707:1722  1000 + slippage */\n      tag_105\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_105:\n        /* \"contracts/Swap.sol\":1678:1702  balanceOf[to].add(value) */\n      tag_106\n        /* \"contracts/Swap.sol\":1696:1701  value */\n      dup6\n        /* \"contracts/Swap.sol\":1678:1687  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1678:1691  balanceOf[to] */\n      0x00\n        /* \"contracts/Swap.sol\":1688:1690  to */\n      dup10\n        /* \"contracts/Swap.sol\":1678:1691  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Swap.sol\":1678:1695  balanceOf[to].add */\n      tag_72\n      swap1\n        /* \"contracts/Swap.sol\":1678:1702  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"contracts/Swap.sol\":1678:1706  balanceOf[to].add(value).mul */\n      tag_99\n      swap1\n        /* \"contracts/Swap.sol\":1678:1723  balanceOf[to].add(value).mul(1000 + slippage) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"contracts/Swap.sol\":1678:1727  balanceOf[to].add(value).mul(1000 + slippage).div */\n      tag_100\n      swap1\n        /* \"contracts/Swap.sol\":1678:1733  balanceOf[to].add(value).mul(1000 + slippage).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/Swap.sol\":1669:1674  value */\n      dup2\n        /* \"contracts/Swap.sol\":1653:1662  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1653:1666  balanceOf[to] */\n      0x00\n        /* \"contracts/Swap.sol\":1663:1665  to */\n      dup6\n        /* \"contracts/Swap.sol\":1653:1666  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Swap.sol\":1653:1674  balanceOf[to] + value */\n      tag_107\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_107:\n        /* \"contracts/Swap.sol\":1653:1733  balanceOf[to] + value <= balanceOf[to].add(value).mul(1000 + slippage).div(1000) */\n      gt\n      iszero\n        /* \"contracts/Swap.sol\":1645:1760  require(balanceOf[to] + value <= balanceOf[to].add(value).mul(1000 + slippage).div(1000), \"Exceeds slippage rate.\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/Swap.sol\":1795:1853  balanceOf[msg.sender].sub(value.mul(1000).div(1000 + fee)) */\n      tag_111\n        /* \"contracts/Swap.sol\":1821:1852  value.mul(1000).div(1000 + fee) */\n      tag_112\n        /* \"contracts/Swap.sol\":1848:1851  fee */\n      sload(0x05)\n        /* \"contracts/Swap.sol\":1841:1845  1000 */\n      0x03e8\n        /* \"contracts/Swap.sol\":1841:1851  1000 + fee */\n      tag_113\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_113:\n        /* \"contracts/Swap.sol\":1821:1836  value.mul(1000) */\n      tag_114\n        /* \"contracts/Swap.sol\":1831:1835  1000 */\n      0x03e8\n        /* \"contracts/Swap.sol\":1821:1826  value */\n      dup6\n        /* \"contracts/Swap.sol\":1821:1830  value.mul */\n      tag_99\n      swap1\n        /* \"contracts/Swap.sol\":1821:1836  value.mul(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contracts/Swap.sol\":1821:1840  value.mul(1000).div */\n      tag_100\n      swap1\n        /* \"contracts/Swap.sol\":1821:1852  value.mul(1000).div(1000 + fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"contracts/Swap.sol\":1795:1804  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1795:1816  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/Swap.sol\":1805:1815  msg.sender */\n      caller\n        /* \"contracts/Swap.sol\":1795:1816  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Swap.sol\":1795:1820  balanceOf[msg.sender].sub */\n      tag_92\n      swap1\n        /* \"contracts/Swap.sol\":1795:1853  balanceOf[msg.sender].sub(value.mul(1000).div(1000 + fee)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"contracts/Swap.sol\":1771:1780  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1771:1792  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/Swap.sol\":1781:1791  msg.sender */\n      caller\n        /* \"contracts/Swap.sol\":1771:1792  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Swap.sol\":1771:1853  balanceOf[msg.sender] = balanceOf[msg.sender].sub(value.mul(1000).div(1000 + fee)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Swap.sol\":1880:1904  balanceOf[to].add(value) */\n      tag_115\n        /* \"contracts/Swap.sol\":1898:1903  value */\n      dup2\n        /* \"contracts/Swap.sol\":1880:1889  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1880:1893  balanceOf[to] */\n      0x00\n        /* \"contracts/Swap.sol\":1890:1892  to */\n      dup6\n        /* \"contracts/Swap.sol\":1880:1893  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Swap.sol\":1880:1897  balanceOf[to].add */\n      tag_72\n      swap1\n        /* \"contracts/Swap.sol\":1880:1904  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_115:\n        /* \"contracts/Swap.sol\":1864:1873  balanceOf */\n      0x04\n        /* \"contracts/Swap.sol\":1864:1877  balanceOf[to] */\n      0x00\n        /* \"contracts/Swap.sol\":1874:1876  to */\n      dup5\n        /* \"contracts/Swap.sol\":1864:1877  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Swap.sol\":1864:1904  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Swap.sol\":1941:1943  to */\n      dup2\n        /* \"contracts/Swap.sol\":1920:1951  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Swap.sol\":1929:1939  msg.sender */\n      caller\n        /* \"contracts/Swap.sol\":1920:1951  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Swap.sol\":1945:1950  value */\n      dup4\n        /* \"contracts/Swap.sol\":1920:1951  Transfer(msg.sender, to, value) */\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Swap.sol\":1483:1959  function transfer(address to, uint256 value) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Swap.sol\":616:638  uint256 public fee = 3 */\n    tag_53:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_132\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_144:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_145:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_146:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_180:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_180)\n    tag_182:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_147:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_148:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_185\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_144\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":818:889   */\n      tag_186\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_145\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_187\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_146\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":988:1017   */\n      tag_188\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_147\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_19:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_190\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_148\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1435   */\n    tag_149:\n        /* \"#utility.yul\":1384:1391   */\n      0x00\n        /* \"#utility.yul\":1424:1428   */\n      0xff\n        /* \"#utility.yul\":1417:1422   */\n      dup3\n        /* \"#utility.yul\":1413:1429   */\n      and\n        /* \"#utility.yul\":1402:1429   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1441:1553   */\n    tag_150:\n        /* \"#utility.yul\":1524:1546   */\n      tag_193\n        /* \"#utility.yul\":1540:1545   */\n      dup2\n        /* \"#utility.yul\":1524:1546   */\n      tag_149\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1519:1522   */\n      dup3\n        /* \"#utility.yul\":1512:1547   */\n      mstore\n        /* \"#utility.yul\":1441:1553   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1559:1773   */\n    tag_23:\n        /* \"#utility.yul\":1648:1652   */\n      0x00\n        /* \"#utility.yul\":1686:1688   */\n      0x20\n        /* \"#utility.yul\":1675:1684   */\n      dup3\n        /* \"#utility.yul\":1671:1689   */\n      add\n        /* \"#utility.yul\":1663:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1699:1766   */\n      tag_195\n        /* \"#utility.yul\":1763:1764   */\n      0x00\n        /* \"#utility.yul\":1752:1761   */\n      dup4\n        /* \"#utility.yul\":1748:1765   */\n      add\n        /* \"#utility.yul\":1739:1745   */\n      dup5\n        /* \"#utility.yul\":1699:1766   */\n      tag_150\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1559:1773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1779:1856   */\n    tag_151:\n        /* \"#utility.yul\":1816:1823   */\n      0x00\n        /* \"#utility.yul\":1845:1850   */\n      dup2\n        /* \"#utility.yul\":1834:1850   */\n      swap1\n      pop\n        /* \"#utility.yul\":1779:1856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1862:1980   */\n    tag_152:\n        /* \"#utility.yul\":1949:1973   */\n      tag_198\n        /* \"#utility.yul\":1967:1972   */\n      dup2\n        /* \"#utility.yul\":1949:1973   */\n      tag_151\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1944:1947   */\n      dup3\n        /* \"#utility.yul\":1937:1974   */\n      mstore\n        /* \"#utility.yul\":1862:1980   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1986:2208   */\n    tag_27:\n        /* \"#utility.yul\":2079:2083   */\n      0x00\n        /* \"#utility.yul\":2117:2119   */\n      0x20\n        /* \"#utility.yul\":2106:2115   */\n      dup3\n        /* \"#utility.yul\":2102:2120   */\n      add\n        /* \"#utility.yul\":2094:2120   */\n      swap1\n      pop\n        /* \"#utility.yul\":2130:2201   */\n      tag_200\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2187:2196   */\n      dup4\n        /* \"#utility.yul\":2183:2200   */\n      add\n        /* \"#utility.yul\":2174:2180   */\n      dup5\n        /* \"#utility.yul\":2130:2201   */\n      tag_152\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1986:2208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2295:2412   */\n    tag_154:\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2401:2402   */\n      dup1\n        /* \"#utility.yul\":2394:2406   */\n      revert\n        /* \"#utility.yul\":2541:2667   */\n    tag_156:\n        /* \"#utility.yul\":2578:2585   */\n      0x00\n        /* \"#utility.yul\":2618:2660   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2611:2616   */\n      dup3\n        /* \"#utility.yul\":2607:2661   */\n      and\n        /* \"#utility.yul\":2596:2661   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2673:2769   */\n    tag_157:\n        /* \"#utility.yul\":2710:2717   */\n      0x00\n        /* \"#utility.yul\":2739:2763   */\n      tag_206\n        /* \"#utility.yul\":2757:2762   */\n      dup3\n        /* \"#utility.yul\":2739:2763   */\n      tag_156\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2728:2763   */\n      swap1\n      pop\n        /* \"#utility.yul\":2673:2769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2775:2897   */\n    tag_158:\n        /* \"#utility.yul\":2848:2872   */\n      tag_208\n        /* \"#utility.yul\":2866:2871   */\n      dup2\n        /* \"#utility.yul\":2848:2872   */\n      tag_157\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2841:2846   */\n      dup2\n        /* \"#utility.yul\":2838:2873   */\n      eq\n        /* \"#utility.yul\":2828:2891   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2887:2888   */\n      0x00\n        /* \"#utility.yul\":2884:2885   */\n      dup1\n        /* \"#utility.yul\":2877:2889   */\n      revert\n        /* \"#utility.yul\":2828:2891   */\n    tag_209:\n        /* \"#utility.yul\":2775:2897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2903:3042   */\n    tag_159:\n        /* \"#utility.yul\":2949:2954   */\n      0x00\n        /* \"#utility.yul\":2987:2993   */\n      dup2\n        /* \"#utility.yul\":2974:2994   */\n      calldataload\n        /* \"#utility.yul\":2965:2994   */\n      swap1\n      pop\n        /* \"#utility.yul\":3003:3036   */\n      tag_211\n        /* \"#utility.yul\":3030:3035   */\n      dup2\n        /* \"#utility.yul\":3003:3036   */\n      tag_158\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2903:3042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3170   */\n    tag_160:\n        /* \"#utility.yul\":3121:3145   */\n      tag_213\n        /* \"#utility.yul\":3139:3144   */\n      dup2\n        /* \"#utility.yul\":3121:3145   */\n      tag_151\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3114:3119   */\n      dup2\n        /* \"#utility.yul\":3111:3146   */\n      eq\n        /* \"#utility.yul\":3101:3164   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":3160:3161   */\n      0x00\n        /* \"#utility.yul\":3157:3158   */\n      dup1\n        /* \"#utility.yul\":3150:3162   */\n      revert\n        /* \"#utility.yul\":3101:3164   */\n    tag_214:\n        /* \"#utility.yul\":3048:3170   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3176:3315   */\n    tag_161:\n        /* \"#utility.yul\":3222:3227   */\n      0x00\n        /* \"#utility.yul\":3260:3266   */\n      dup2\n        /* \"#utility.yul\":3247:3267   */\n      calldataload\n        /* \"#utility.yul\":3238:3267   */\n      swap1\n      pop\n        /* \"#utility.yul\":3276:3309   */\n      tag_216\n        /* \"#utility.yul\":3303:3308   */\n      dup2\n        /* \"#utility.yul\":3276:3309   */\n      tag_160\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3176:3315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3321:3795   */\n    tag_30:\n        /* \"#utility.yul\":3389:3395   */\n      0x00\n        /* \"#utility.yul\":3397:3403   */\n      dup1\n        /* \"#utility.yul\":3446:3448   */\n      0x40\n        /* \"#utility.yul\":3434:3443   */\n      dup4\n        /* \"#utility.yul\":3425:3432   */\n      dup6\n        /* \"#utility.yul\":3421:3444   */\n      sub\n        /* \"#utility.yul\":3417:3449   */\n      slt\n        /* \"#utility.yul\":3414:3533   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":3452:3531   */\n      tag_219\n      tag_154\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3414:3533   */\n    tag_218:\n        /* \"#utility.yul\":3572:3573   */\n      0x00\n        /* \"#utility.yul\":3597:3650   */\n      tag_220\n        /* \"#utility.yul\":3642:3649   */\n      dup6\n        /* \"#utility.yul\":3633:3639   */\n      dup3\n        /* \"#utility.yul\":3622:3631   */\n      dup7\n        /* \"#utility.yul\":3618:3640   */\n      add\n        /* \"#utility.yul\":3597:3650   */\n      tag_159\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3587:3650   */\n      swap3\n      pop\n        /* \"#utility.yul\":3543:3660   */\n      pop\n        /* \"#utility.yul\":3699:3701   */\n      0x20\n        /* \"#utility.yul\":3725:3778   */\n      tag_221\n        /* \"#utility.yul\":3770:3777   */\n      dup6\n        /* \"#utility.yul\":3761:3767   */\n      dup3\n        /* \"#utility.yul\":3750:3759   */\n      dup7\n        /* \"#utility.yul\":3746:3768   */\n      add\n        /* \"#utility.yul\":3725:3778   */\n      tag_161\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3715:3778   */\n      swap2\n      pop\n        /* \"#utility.yul\":3670:3788   */\n      pop\n        /* \"#utility.yul\":3321:3795   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3801:4130   */\n    tag_34:\n        /* \"#utility.yul\":3860:3866   */\n      0x00\n        /* \"#utility.yul\":3909:3911   */\n      0x20\n        /* \"#utility.yul\":3897:3906   */\n      dup3\n        /* \"#utility.yul\":3888:3895   */\n      dup5\n        /* \"#utility.yul\":3884:3907   */\n      sub\n        /* \"#utility.yul\":3880:3912   */\n      slt\n        /* \"#utility.yul\":3877:3996   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3915:3994   */\n      tag_224\n      tag_154\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3877:3996   */\n    tag_223:\n        /* \"#utility.yul\":4035:4036   */\n      0x00\n        /* \"#utility.yul\":4060:4113   */\n      tag_225\n        /* \"#utility.yul\":4105:4112   */\n      dup5\n        /* \"#utility.yul\":4096:4102   */\n      dup3\n        /* \"#utility.yul\":4085:4094   */\n      dup6\n        /* \"#utility.yul\":4081:4103   */\n      add\n        /* \"#utility.yul\":4060:4113   */\n      tag_159\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4050:4113   */\n      swap2\n      pop\n        /* \"#utility.yul\":4006:4123   */\n      pop\n        /* \"#utility.yul\":3801:4130   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4136:4254   */\n    tag_162:\n        /* \"#utility.yul\":4223:4247   */\n      tag_227\n        /* \"#utility.yul\":4241:4246   */\n      dup2\n        /* \"#utility.yul\":4223:4247   */\n      tag_157\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4218:4221   */\n      dup3\n        /* \"#utility.yul\":4211:4248   */\n      mstore\n        /* \"#utility.yul\":4136:4254   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4260:4482   */\n    tag_42:\n        /* \"#utility.yul\":4353:4357   */\n      0x00\n        /* \"#utility.yul\":4391:4393   */\n      0x20\n        /* \"#utility.yul\":4380:4389   */\n      dup3\n        /* \"#utility.yul\":4376:4394   */\n      add\n        /* \"#utility.yul\":4368:4394   */\n      swap1\n      pop\n        /* \"#utility.yul\":4404:4475   */\n      tag_229\n        /* \"#utility.yul\":4472:4473   */\n      0x00\n        /* \"#utility.yul\":4461:4470   */\n      dup4\n        /* \"#utility.yul\":4457:4474   */\n      add\n        /* \"#utility.yul\":4448:4454   */\n      dup5\n        /* \"#utility.yul\":4404:4475   */\n      tag_162\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4260:4482   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4488:4668   */\n    tag_163:\n        /* \"#utility.yul\":4536:4613   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4533:4534   */\n      0x00\n        /* \"#utility.yul\":4526:4614   */\n      mstore\n        /* \"#utility.yul\":4633:4637   */\n      0x22\n        /* \"#utility.yul\":4630:4631   */\n      0x04\n        /* \"#utility.yul\":4623:4638   */\n      mstore\n        /* \"#utility.yul\":4657:4661   */\n      0x24\n        /* \"#utility.yul\":4654:4655   */\n      0x00\n        /* \"#utility.yul\":4647:4662   */\n      revert\n        /* \"#utility.yul\":4674:4994   */\n    tag_59:\n        /* \"#utility.yul\":4718:4724   */\n      0x00\n        /* \"#utility.yul\":4755:4756   */\n      0x02\n        /* \"#utility.yul\":4749:4753   */\n      dup3\n        /* \"#utility.yul\":4745:4757   */\n      div\n        /* \"#utility.yul\":4735:4757   */\n      swap1\n      pop\n        /* \"#utility.yul\":4802:4803   */\n      0x01\n        /* \"#utility.yul\":4796:4800   */\n      dup3\n        /* \"#utility.yul\":4792:4804   */\n      and\n        /* \"#utility.yul\":4823:4841   */\n      dup1\n        /* \"#utility.yul\":4813:4894   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4879:4883   */\n      0x7f\n        /* \"#utility.yul\":4871:4877   */\n      dup3\n        /* \"#utility.yul\":4867:4884   */\n      and\n        /* \"#utility.yul\":4857:4884   */\n      swap2\n      pop\n        /* \"#utility.yul\":4813:4894   */\n    tag_232:\n        /* \"#utility.yul\":4941:4943   */\n      0x20\n        /* \"#utility.yul\":4933:4939   */\n      dup3\n        /* \"#utility.yul\":4930:4944   */\n      lt\n        /* \"#utility.yul\":4910:4928   */\n      dup2\n        /* \"#utility.yul\":4907:4945   */\n      sub\n        /* \"#utility.yul\":4904:4988   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":4960:4978   */\n      tag_234\n      tag_163\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4904:4988   */\n    tag_233:\n        /* \"#utility.yul\":4725:4994   */\n      pop\n        /* \"#utility.yul\":4674:4994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5000:5223   */\n    tag_164:\n        /* \"#utility.yul\":5140:5174   */\n      0x43616e6e6f74206d696e74207a65726f206f72206e6567617469766520746f6b\n        /* \"#utility.yul\":5136:5137   */\n      0x00\n        /* \"#utility.yul\":5128:5134   */\n      dup3\n        /* \"#utility.yul\":5124:5138   */\n      add\n        /* \"#utility.yul\":5117:5175   */\n      mstore\n        /* \"#utility.yul\":5209:5215   */\n      0x656e732e00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5204:5206   */\n      0x20\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5192:5207   */\n      add\n        /* \"#utility.yul\":5185:5216   */\n      mstore\n        /* \"#utility.yul\":5000:5223   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5229:5595   */\n    tag_165:\n        /* \"#utility.yul\":5371:5374   */\n      0x00\n        /* \"#utility.yul\":5392:5459   */\n      tag_237\n        /* \"#utility.yul\":5456:5458   */\n      0x24\n        /* \"#utility.yul\":5451:5454   */\n      dup4\n        /* \"#utility.yul\":5392:5459   */\n      tag_145\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5385:5459   */\n      swap2\n      pop\n        /* \"#utility.yul\":5468:5561   */\n      tag_238\n        /* \"#utility.yul\":5557:5560   */\n      dup3\n        /* \"#utility.yul\":5468:5561   */\n      tag_164\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5586:5588   */\n      0x40\n        /* \"#utility.yul\":5581:5584   */\n      dup3\n        /* \"#utility.yul\":5577:5589   */\n      add\n        /* \"#utility.yul\":5570:5589   */\n      swap1\n      pop\n        /* \"#utility.yul\":5229:5595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5601:6020   */\n    tag_70:\n        /* \"#utility.yul\":5767:5771   */\n      0x00\n        /* \"#utility.yul\":5805:5807   */\n      0x20\n        /* \"#utility.yul\":5794:5803   */\n      dup3\n        /* \"#utility.yul\":5790:5808   */\n      add\n        /* \"#utility.yul\":5782:5808   */\n      swap1\n      pop\n        /* \"#utility.yul\":5854:5863   */\n      dup2\n        /* \"#utility.yul\":5848:5852   */\n      dup2\n        /* \"#utility.yul\":5844:5864   */\n      sub\n        /* \"#utility.yul\":5840:5841   */\n      0x00\n        /* \"#utility.yul\":5829:5838   */\n      dup4\n        /* \"#utility.yul\":5825:5842   */\n      add\n        /* \"#utility.yul\":5818:5865   */\n      mstore\n        /* \"#utility.yul\":5882:6013   */\n      tag_240\n        /* \"#utility.yul\":6008:6012   */\n      dup2\n        /* \"#utility.yul\":5882:6013   */\n      tag_165\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5874:6013   */\n      swap1\n      pop\n        /* \"#utility.yul\":5601:6020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6026:6195   */\n    tag_166:\n        /* \"#utility.yul\":6166:6187   */\n      0x4e6f7420656e6f7567682062616c616e63652e00000000000000000000000000\n        /* \"#utility.yul\":6162:6163   */\n      0x00\n        /* \"#utility.yul\":6154:6160   */\n      dup3\n        /* \"#utility.yul\":6150:6164   */\n      add\n        /* \"#utility.yul\":6143:6188   */\n      mstore\n        /* \"#utility.yul\":6026:6195   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6201:6567   */\n    tag_167:\n        /* \"#utility.yul\":6343:6346   */\n      0x00\n        /* \"#utility.yul\":6364:6431   */\n      tag_243\n        /* \"#utility.yul\":6428:6430   */\n      0x13\n        /* \"#utility.yul\":6423:6426   */\n      dup4\n        /* \"#utility.yul\":6364:6431   */\n      tag_145\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6357:6431   */\n      swap2\n      pop\n        /* \"#utility.yul\":6440:6533   */\n      tag_244\n        /* \"#utility.yul\":6529:6532   */\n      dup3\n        /* \"#utility.yul\":6440:6533   */\n      tag_166\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6558:6560   */\n      0x20\n        /* \"#utility.yul\":6553:6556   */\n      dup3\n        /* \"#utility.yul\":6549:6561   */\n      add\n        /* \"#utility.yul\":6542:6561   */\n      swap1\n      pop\n        /* \"#utility.yul\":6201:6567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6573:6992   */\n    tag_90:\n        /* \"#utility.yul\":6739:6743   */\n      0x00\n        /* \"#utility.yul\":6777:6779   */\n      0x20\n        /* \"#utility.yul\":6766:6775   */\n      dup3\n        /* \"#utility.yul\":6762:6780   */\n      add\n        /* \"#utility.yul\":6754:6780   */\n      swap1\n      pop\n        /* \"#utility.yul\":6826:6835   */\n      dup2\n        /* \"#utility.yul\":6820:6824   */\n      dup2\n        /* \"#utility.yul\":6816:6836   */\n      sub\n        /* \"#utility.yul\":6812:6813   */\n      0x00\n        /* \"#utility.yul\":6801:6810   */\n      dup4\n        /* \"#utility.yul\":6797:6814   */\n      add\n        /* \"#utility.yul\":6790:6837   */\n      mstore\n        /* \"#utility.yul\":6854:6985   */\n      tag_246\n        /* \"#utility.yul\":6980:6984   */\n      dup2\n        /* \"#utility.yul\":6854:6985   */\n      tag_167\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6846:6985   */\n      swap1\n      pop\n        /* \"#utility.yul\":6573:6992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6998:7178   */\n    tag_168:\n        /* \"#utility.yul\":7046:7123   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7043:7044   */\n      0x00\n        /* \"#utility.yul\":7036:7124   */\n      mstore\n        /* \"#utility.yul\":7143:7147   */\n      0x11\n        /* \"#utility.yul\":7140:7141   */\n      0x04\n        /* \"#utility.yul\":7133:7148   */\n      mstore\n        /* \"#utility.yul\":7167:7171   */\n      0x24\n        /* \"#utility.yul\":7164:7165   */\n      0x00\n        /* \"#utility.yul\":7157:7172   */\n      revert\n        /* \"#utility.yul\":7184:7375   */\n    tag_97:\n        /* \"#utility.yul\":7224:7227   */\n      0x00\n        /* \"#utility.yul\":7243:7263   */\n      tag_249\n        /* \"#utility.yul\":7261:7262   */\n      dup3\n        /* \"#utility.yul\":7243:7263   */\n      tag_151\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7238:7263   */\n      swap2\n      pop\n        /* \"#utility.yul\":7277:7297   */\n      tag_250\n        /* \"#utility.yul\":7295:7296   */\n      dup4\n        /* \"#utility.yul\":7277:7297   */\n      tag_151\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7272:7297   */\n      swap3\n      pop\n        /* \"#utility.yul\":7320:7321   */\n      dup3\n        /* \"#utility.yul\":7317:7318   */\n      dup3\n        /* \"#utility.yul\":7313:7322   */\n      add\n        /* \"#utility.yul\":7306:7322   */\n      swap1\n      pop\n        /* \"#utility.yul\":7341:7344   */\n      dup1\n        /* \"#utility.yul\":7338:7339   */\n      dup3\n        /* \"#utility.yul\":7335:7345   */\n      gt\n        /* \"#utility.yul\":7332:7368   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":7348:7366   */\n      tag_252\n      tag_168\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7332:7368   */\n    tag_251:\n        /* \"#utility.yul\":7184:7375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7381:7553   */\n    tag_169:\n        /* \"#utility.yul\":7521:7545   */\n      0x4578636565647320736c69707061676520726174652e00000000000000000000\n        /* \"#utility.yul\":7517:7518   */\n      0x00\n        /* \"#utility.yul\":7509:7515   */\n      dup3\n        /* \"#utility.yul\":7505:7519   */\n      add\n        /* \"#utility.yul\":7498:7546   */\n      mstore\n        /* \"#utility.yul\":7381:7553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7559:7925   */\n    tag_170:\n        /* \"#utility.yul\":7701:7704   */\n      0x00\n        /* \"#utility.yul\":7722:7789   */\n      tag_255\n        /* \"#utility.yul\":7786:7788   */\n      0x16\n        /* \"#utility.yul\":7781:7784   */\n      dup4\n        /* \"#utility.yul\":7722:7789   */\n      tag_145\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7715:7789   */\n      swap2\n      pop\n        /* \"#utility.yul\":7798:7891   */\n      tag_256\n        /* \"#utility.yul\":7887:7890   */\n      dup3\n        /* \"#utility.yul\":7798:7891   */\n      tag_169\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7916:7918   */\n      0x20\n        /* \"#utility.yul\":7911:7914   */\n      dup3\n        /* \"#utility.yul\":7907:7919   */\n      add\n        /* \"#utility.yul\":7900:7919   */\n      swap1\n      pop\n        /* \"#utility.yul\":7559:7925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7931:8350   */\n    tag_110:\n        /* \"#utility.yul\":8097:8101   */\n      0x00\n        /* \"#utility.yul\":8135:8137   */\n      0x20\n        /* \"#utility.yul\":8124:8133   */\n      dup3\n        /* \"#utility.yul\":8120:8138   */\n      add\n        /* \"#utility.yul\":8112:8138   */\n      swap1\n      pop\n        /* \"#utility.yul\":8184:8193   */\n      dup2\n        /* \"#utility.yul\":8178:8182   */\n      dup2\n        /* \"#utility.yul\":8174:8194   */\n      sub\n        /* \"#utility.yul\":8170:8171   */\n      0x00\n        /* \"#utility.yul\":8159:8168   */\n      dup4\n        /* \"#utility.yul\":8155:8172   */\n      add\n        /* \"#utility.yul\":8148:8195   */\n      mstore\n        /* \"#utility.yul\":8212:8343   */\n      tag_258\n        /* \"#utility.yul\":8338:8342   */\n      dup2\n        /* \"#utility.yul\":8212:8343   */\n      tag_170\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":8204:8343   */\n      swap1\n      pop\n        /* \"#utility.yul\":7931:8350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8356:8581   */\n    tag_171:\n        /* \"#utility.yul\":8496:8530   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8492:8493   */\n      0x00\n        /* \"#utility.yul\":8484:8490   */\n      dup3\n        /* \"#utility.yul\":8480:8494   */\n      add\n        /* \"#utility.yul\":8473:8531   */\n      mstore\n        /* \"#utility.yul\":8565:8573   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8560:8562   */\n      0x20\n        /* \"#utility.yul\":8552:8558   */\n      dup3\n        /* \"#utility.yul\":8548:8563   */\n      add\n        /* \"#utility.yul\":8541:8574   */\n      mstore\n        /* \"#utility.yul\":8356:8581   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8587:8953   */\n    tag_172:\n        /* \"#utility.yul\":8729:8732   */\n      0x00\n        /* \"#utility.yul\":8750:8817   */\n      tag_261\n        /* \"#utility.yul\":8814:8816   */\n      0x26\n        /* \"#utility.yul\":8809:8812   */\n      dup4\n        /* \"#utility.yul\":8750:8817   */\n      tag_145\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8743:8817   */\n      swap2\n      pop\n        /* \"#utility.yul\":8826:8919   */\n      tag_262\n        /* \"#utility.yul\":8915:8918   */\n      dup3\n        /* \"#utility.yul\":8826:8919   */\n      tag_171\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8944:8946   */\n      0x40\n        /* \"#utility.yul\":8939:8942   */\n      dup3\n        /* \"#utility.yul\":8935:8947   */\n      add\n        /* \"#utility.yul\":8928:8947   */\n      swap1\n      pop\n        /* \"#utility.yul\":8587:8953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8959:9378   */\n    tag_122:\n        /* \"#utility.yul\":9125:9129   */\n      0x00\n        /* \"#utility.yul\":9163:9165   */\n      0x20\n        /* \"#utility.yul\":9152:9161   */\n      dup3\n        /* \"#utility.yul\":9148:9166   */\n      add\n        /* \"#utility.yul\":9140:9166   */\n      swap1\n      pop\n        /* \"#utility.yul\":9212:9221   */\n      dup2\n        /* \"#utility.yul\":9206:9210   */\n      dup2\n        /* \"#utility.yul\":9202:9222   */\n      sub\n        /* \"#utility.yul\":9198:9199   */\n      0x00\n        /* \"#utility.yul\":9187:9196   */\n      dup4\n        /* \"#utility.yul\":9183:9200   */\n      add\n        /* \"#utility.yul\":9176:9223   */\n      mstore\n        /* \"#utility.yul\":9240:9371   */\n      tag_264\n        /* \"#utility.yul\":9366:9370   */\n      dup2\n        /* \"#utility.yul\":9240:9371   */\n      tag_172\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":9232:9371   */\n      swap1\n      pop\n        /* \"#utility.yul\":8959:9378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9384:9566   */\n    tag_173:\n        /* \"#utility.yul\":9524:9558   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9520:9521   */\n      0x00\n        /* \"#utility.yul\":9512:9518   */\n      dup3\n        /* \"#utility.yul\":9508:9522   */\n      add\n        /* \"#utility.yul\":9501:9559   */\n      mstore\n        /* \"#utility.yul\":9384:9566   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9572:9938   */\n    tag_174:\n        /* \"#utility.yul\":9714:9717   */\n      0x00\n        /* \"#utility.yul\":9735:9802   */\n      tag_267\n        /* \"#utility.yul\":9799:9801   */\n      0x20\n        /* \"#utility.yul\":9794:9797   */\n      dup4\n        /* \"#utility.yul\":9735:9802   */\n      tag_145\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9728:9802   */\n      swap2\n      pop\n        /* \"#utility.yul\":9811:9904   */\n      tag_268\n        /* \"#utility.yul\":9900:9903   */\n      dup3\n        /* \"#utility.yul\":9811:9904   */\n      tag_173\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9929:9931   */\n      0x20\n        /* \"#utility.yul\":9924:9927   */\n      dup3\n        /* \"#utility.yul\":9920:9932   */\n      add\n        /* \"#utility.yul\":9913:9932   */\n      swap1\n      pop\n        /* \"#utility.yul\":9572:9938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9944:10363   */\n    tag_130:\n        /* \"#utility.yul\":10110:10114   */\n      0x00\n        /* \"#utility.yul\":10148:10150   */\n      0x20\n        /* \"#utility.yul\":10137:10146   */\n      dup3\n        /* \"#utility.yul\":10133:10151   */\n      add\n        /* \"#utility.yul\":10125:10151   */\n      swap1\n      pop\n        /* \"#utility.yul\":10197:10206   */\n      dup2\n        /* \"#utility.yul\":10191:10195   */\n      dup2\n        /* \"#utility.yul\":10187:10207   */\n      sub\n        /* \"#utility.yul\":10183:10184   */\n      0x00\n        /* \"#utility.yul\":10172:10181   */\n      dup4\n        /* \"#utility.yul\":10168:10185   */\n      add\n        /* \"#utility.yul\":10161:10208   */\n      mstore\n        /* \"#utility.yul\":10225:10356   */\n      tag_270\n        /* \"#utility.yul\":10351:10355   */\n      dup2\n        /* \"#utility.yul\":10225:10356   */\n      tag_174\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10217:10356   */\n      swap1\n      pop\n        /* \"#utility.yul\":9944:10363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10369:10563   */\n    tag_136:\n        /* \"#utility.yul\":10409:10413   */\n      0x00\n        /* \"#utility.yul\":10429:10449   */\n      tag_272\n        /* \"#utility.yul\":10447:10448   */\n      dup3\n        /* \"#utility.yul\":10429:10449   */\n      tag_151\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10424:10449   */\n      swap2\n      pop\n        /* \"#utility.yul\":10463:10483   */\n      tag_273\n        /* \"#utility.yul\":10481:10482   */\n      dup4\n        /* \"#utility.yul\":10463:10483   */\n      tag_151\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10458:10483   */\n      swap3\n      pop\n        /* \"#utility.yul\":10507:10508   */\n      dup3\n        /* \"#utility.yul\":10504:10505   */\n      dup3\n        /* \"#utility.yul\":10500:10509   */\n      sub\n        /* \"#utility.yul\":10492:10509   */\n      swap1\n      pop\n        /* \"#utility.yul\":10531:10532   */\n      dup2\n        /* \"#utility.yul\":10525:10529   */\n      dup2\n        /* \"#utility.yul\":10522:10533   */\n      gt\n        /* \"#utility.yul\":10519:10556   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":10536:10554   */\n      tag_275\n      tag_168\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10519:10556   */\n    tag_274:\n        /* \"#utility.yul\":10369:10563   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10569:10979   */\n    tag_139:\n        /* \"#utility.yul\":10609:10616   */\n      0x00\n        /* \"#utility.yul\":10632:10652   */\n      tag_277\n        /* \"#utility.yul\":10650:10651   */\n      dup3\n        /* \"#utility.yul\":10632:10652   */\n      tag_151\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10627:10652   */\n      swap2\n      pop\n        /* \"#utility.yul\":10666:10686   */\n      tag_278\n        /* \"#utility.yul\":10684:10685   */\n      dup4\n        /* \"#utility.yul\":10666:10686   */\n      tag_151\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10661:10686   */\n      swap3\n      pop\n        /* \"#utility.yul\":10721:10722   */\n      dup3\n        /* \"#utility.yul\":10718:10719   */\n      dup3\n        /* \"#utility.yul\":10714:10723   */\n      mul\n        /* \"#utility.yul\":10743:10773   */\n      tag_279\n        /* \"#utility.yul\":10761:10772   */\n      dup2\n        /* \"#utility.yul\":10743:10773   */\n      tag_151\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10732:10773   */\n      swap2\n      pop\n        /* \"#utility.yul\":10922:10923   */\n      dup3\n        /* \"#utility.yul\":10913:10920   */\n      dup3\n        /* \"#utility.yul\":10909:10924   */\n      div\n        /* \"#utility.yul\":10906:10907   */\n      dup5\n        /* \"#utility.yul\":10903:10925   */\n      eq\n        /* \"#utility.yul\":10883:10884   */\n      dup4\n        /* \"#utility.yul\":10876:10885   */\n      iszero\n        /* \"#utility.yul\":10856:10939   */\n      or\n        /* \"#utility.yul\":10833:10972   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":10952:10970   */\n      tag_281\n      tag_168\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10833:10972   */\n    tag_280:\n        /* \"#utility.yul\":10617:10979   */\n      pop\n        /* \"#utility.yul\":10569:10979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10985:11165   */\n    tag_175:\n        /* \"#utility.yul\":11033:11110   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11030:11031   */\n      0x00\n        /* \"#utility.yul\":11023:11111   */\n      mstore\n        /* \"#utility.yul\":11130:11134   */\n      0x12\n        /* \"#utility.yul\":11127:11128   */\n      0x04\n        /* \"#utility.yul\":11120:11135   */\n      mstore\n        /* \"#utility.yul\":11154:11158   */\n      0x24\n        /* \"#utility.yul\":11151:11152   */\n      0x00\n        /* \"#utility.yul\":11144:11159   */\n      revert\n        /* \"#utility.yul\":11171:11356   */\n    tag_142:\n        /* \"#utility.yul\":11211:11212   */\n      0x00\n        /* \"#utility.yul\":11228:11248   */\n      tag_284\n        /* \"#utility.yul\":11246:11247   */\n      dup3\n        /* \"#utility.yul\":11228:11248   */\n      tag_151\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11223:11248   */\n      swap2\n      pop\n        /* \"#utility.yul\":11262:11282   */\n      tag_285\n        /* \"#utility.yul\":11280:11281   */\n      dup4\n        /* \"#utility.yul\":11262:11282   */\n      tag_151\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":11257:11282   */\n      swap3\n      pop\n        /* \"#utility.yul\":11301:11302   */\n      dup3\n        /* \"#utility.yul\":11291:11326   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":11306:11324   */\n      tag_287\n      tag_175\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11291:11326   */\n    tag_286:\n        /* \"#utility.yul\":11348:11349   */\n      dup3\n        /* \"#utility.yul\":11345:11346   */\n      dup3\n        /* \"#utility.yul\":11341:11350   */\n      div\n        /* \"#utility.yul\":11336:11350   */\n      swap1\n      pop\n        /* \"#utility.yul\":11171:11356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220397a5c4736d14eaf95e8b20544f0efcba71ca205f58ad2a0e269ac907dd1ba4564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1191": {
									"entryPoint": null,
									"id": 1191,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_814": {
									"entryPoint": 164,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 172,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 1234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 388,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9087:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:8",
														"type": ""
													}
												],
												"src": "580:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:8"
															},
															"nodeType": "YulIf",
															"src": "1030:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:8",
														"type": ""
													}
												],
												"src": "874:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:8",
														"type": ""
													}
												],
												"src": "1161:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:8"
															},
															"nodeType": "YulIf",
															"src": "1434:56:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:8",
														"type": ""
													}
												],
												"src": "1296:308:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:8",
																"statements": []
															},
															"src": "1701:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:8",
														"type": ""
													}
												],
												"src": "1610:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:8"
															},
															"nodeType": "YulIf",
															"src": "2117:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:8",
														"type": ""
													}
												],
												"src": "1862:434:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:8"
															},
															"nodeType": "YulIf",
															"src": "2399:122:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:8",
														"type": ""
													}
												],
												"src": "2316:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2720:43:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2730:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2745:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2752:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2741:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2741:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2730:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2702:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2712:7:8",
														"type": ""
													}
												],
												"src": "2677:86:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2810:77:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2865:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2874:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2877:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2867:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2867:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2867:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2833:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2856:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "2840:15:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2840:22:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2830:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2830:33:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:41:8"
															},
															"nodeType": "YulIf",
															"src": "2820:61:8"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2803:5:8",
														"type": ""
													}
												],
												"src": "2769:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2954:78:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2964:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2979:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2973:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2973:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2964:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3020:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "2995:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2995:31:8"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2932:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2940:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2948:5:8",
														"type": ""
													}
												],
												"src": "2893:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3167:876:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3213:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3215:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3215:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3215:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3188:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3197:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3184:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3184:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3180:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3180:32:8"
															},
															"nodeType": "YulIf",
															"src": "3177:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3306:291:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3321:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3345:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3356:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3341:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3341:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3335:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3335:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3325:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3406:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3408:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3408:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3408:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3378:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3386:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3375:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3375:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "3372:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3503:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3559:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3570:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3555:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3555:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3579:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3513:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3513:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3503:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3607:292:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3622:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3646:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3657:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3642:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3642:18:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3636:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3636:25:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3626:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3708:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3710:77:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3710:79:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3710:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3680:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3688:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3677:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3677:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "3674:117:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3805:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3861:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3857:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3815:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3805:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3909:127:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3924:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3938:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3928:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3954:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3998:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4009:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3994:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3994:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4018:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3964:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3964:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3954:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3121:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3132:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3144:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3152:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3160:6:8",
														"type": ""
													}
												],
												"src": "3038:1005:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4108:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4119:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4135:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4129:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4129:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4119:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4091:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4101:6:8",
														"type": ""
													}
												],
												"src": "4049:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4182:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4199:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4202:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4192:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4296:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4289:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4289:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4289:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4320:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4323:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4313:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4313:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4313:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4154:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4391:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4401:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4415:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4421:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4411:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4411:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4432:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4462:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4436:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4509:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4523:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4537:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4545:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4533:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4533:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4523:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4489:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4482:26:8"
															},
															"nodeType": "YulIf",
															"src": "4479:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4612:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4626:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4626:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4626:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4576:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4599:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4607:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4596:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4573:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4573:38:8"
															},
															"nodeType": "YulIf",
															"src": "4570:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4375:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4384:6:8",
														"type": ""
													}
												],
												"src": "4340:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4720:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4730:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4738:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4730:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4758:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4761:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4751:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4774:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4792:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4795:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4782:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4774:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4707:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4715:4:8",
														"type": ""
													}
												],
												"src": "4666:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4857:49:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4867:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4885:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4892:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4881:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4881:14:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4897:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4867:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4840:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4850:6:8",
														"type": ""
													}
												],
												"src": "4813:93:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4965:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4975:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "5000:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5006:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4996:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4975:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4940:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4946:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4956:8:8",
														"type": ""
													}
												],
												"src": "4912:107:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5101:317:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5111:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "5132:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5144:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5128:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5128:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "5115:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5155:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5186:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5197:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5167:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5167:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5159:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5273:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "5304:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "5315:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5285:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "5273:8:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5333:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5346:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5357:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5353:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5353:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5342:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5342:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5333:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5372:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5385:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "5396:8:8"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5406:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5392:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5392:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5382:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5382:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5372:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5062:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "5069:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "5081:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5094:6:8",
														"type": ""
													}
												],
												"src": "5025:393:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5469:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5479:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5490:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5479:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5451:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5461:7:8",
														"type": ""
													}
												],
												"src": "5424:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5539:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5549:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5556:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5525:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5535:3:8",
														"type": ""
													}
												],
												"src": "5507:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5633:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5643:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5701:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5683:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5683:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5674:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5674:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5656:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5656:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5643:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5613:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5623:9:8",
														"type": ""
													}
												],
												"src": "5573:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5768:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5778:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5785:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5778:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5754:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5764:3:8",
														"type": ""
													}
												],
												"src": "5721:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5878:193:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5888:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5943:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5912:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5912:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5892:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5967:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "6007:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "6001:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6001:11:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6014:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "6046:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6022:23:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6022:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5973:27:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5973:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5960:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:105:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5960:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5855:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5861:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5869:7:8",
														"type": ""
													}
												],
												"src": "5802:269:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6126:24:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6136:8:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6143:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6136:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6122:3:8",
														"type": ""
													}
												],
												"src": "6077:73:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6209:136:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6219:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6233:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6233:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "6223:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6318:4:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6324:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "6332:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6274:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6274:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6274:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6195:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6201:6:8",
														"type": ""
													}
												],
												"src": "6156:189:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6401:136:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6468:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6512:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6519:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6482:29:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6482:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6482:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "6421:5:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6428:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6418:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6418:14:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6433:26:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6435:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6448:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6455:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6444:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6444:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "6435:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6415:2:8",
																"statements": []
															},
															"src": "6411:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "6389:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6396:3:8",
														"type": ""
													}
												],
												"src": "6351:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6622:464:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6648:431:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6662:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6710:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6678:31:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6678:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6666:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6729:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6752:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6780:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6762:17:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6762:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6748:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6748:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6733:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6949:27:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6951:23:8",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6966:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6951:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6933:10:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6945:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6930:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6930:18:8"
																		},
																		"nodeType": "YulIf",
																		"src": "6927:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "7018:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "7035:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "7063:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "7045:17:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7045:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7031:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7031:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6989:28:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6989:80:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6989:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6639:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6644:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6636:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6636:11:8"
															},
															"nodeType": "YulIf",
															"src": "6633:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6598:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6605:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6610:10:8",
														"type": ""
													}
												],
												"src": "6543:543:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7155:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7165:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "7190:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7196:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7186:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7186:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7165:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "7130:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7136:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7146:8:8",
														"type": ""
													}
												],
												"src": "7092:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7266:118:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7276:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7325:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "7328:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "7321:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7321:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7340:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7336:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7336:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "7292:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7292:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7288:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "7280:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7353:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7367:4:8"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "7373:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7363:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7363:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7353:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7243:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "7249:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7259:6:8",
														"type": ""
													}
												],
												"src": "7215:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7470:214:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7603:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7630:4:8"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7636:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7611:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7611:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7603:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7649:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7660:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7670:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7673:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7666:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7666:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7657:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7657:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7649:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7451:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7457:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7465:4:8",
														"type": ""
													}
												],
												"src": "7389:295:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7781:1303:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7792:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7839:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7806:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7806:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7796:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7928:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7930:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7930:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7930:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7900:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7908:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7897:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:30:8"
															},
															"nodeType": "YulIf",
															"src": "7894:56:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7960:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "8006:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "8000:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8000:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7974:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7974:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7964:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "8105:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "8111:6:8"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8119:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "8059:45:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8059:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8059:67:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8136:18:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8153:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "8140:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8164:17:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8177:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "8164:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8228:611:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8242:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8261:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8273:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "8269:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8269:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "8257:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8257:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "8246:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8293:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8339:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "8307:31:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8307:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "8297:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8366:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8361:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8425:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8450:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8468:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8473:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8464:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8464:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8458:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8458:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8443:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8443:42:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8443:42:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8502:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8516:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8524:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8512:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8512:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8502:6:8"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8543:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8560:9:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8571:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8556:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8556:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8543:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8391:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8394:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8388:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8388:14:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8403:21:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8405:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8414:1:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8417:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8410:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8410:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8405:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8384:3:8",
																					"statements": []
																				},
																				"src": "8380:208:8"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8624:156:8",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8642:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8669:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8674:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8665:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8665:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8659:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8659:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8646:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8709:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8736:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8751:6:8"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8759:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8747:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8747:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8717:18:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8717:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8702:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8702:64:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8702:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8607:7:8"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8616:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8604:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8604:19:8"
																				},
																				"nodeType": "YulIf",
																				"src": "8601:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8800:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8814:6:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8822:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8810:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8810:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8826:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8806:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8806:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8793:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8793:36:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8793:36:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8221:618:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8226:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8856:222:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8870:14:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8883:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8874:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8907:67:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8925:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8944:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8949:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8940:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8940:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8934:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8934:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8925:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8900:6:8"
																				},
																				"nodeType": "YulIf",
																				"src": "8897:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8994:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "9053:5:8"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "9060:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "9000:52:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9000:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8987:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8987:81:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8987:81:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8848:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8209:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8198:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8198:14:8"
															},
															"nodeType": "YulSwitch",
															"src": "8191:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7770:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7776:3:8",
														"type": ""
													}
												],
												"src": "7689:1395:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260036005553480156200001657600080fd5b50604051620019c8380380620019c883398181016040528101906200003c919062000341565b6200005c62000050620000a460201b60201c565b620000ac60201b60201c565b82600190816200006d919062000626565b5081600290816200007f919062000626565b5080600360006101000a81548160ff021916908360ff1602179055505050506200070d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001d9826200018e565b810181811067ffffffffffffffff82111715620001fb57620001fa6200019f565b5b80604052505050565b60006200021062000170565b90506200021e8282620001ce565b919050565b600067ffffffffffffffff8211156200024157620002406200019f565b5b6200024c826200018e565b9050602081019050919050565b60005b83811015620002795780820151818401526020810190506200025c565b60008484015250505050565b60006200029c620002968462000223565b62000204565b905082815260208101848484011115620002bb57620002ba62000189565b5b620002c884828562000259565b509392505050565b600082601f830112620002e857620002e762000184565b5b8151620002fa84826020860162000285565b91505092915050565b600060ff82169050919050565b6200031b8162000303565b81146200032757600080fd5b50565b6000815190506200033b8162000310565b92915050565b6000806000606084860312156200035d576200035c6200017a565b5b600084015167ffffffffffffffff8111156200037e576200037d6200017f565b5b6200038c86828701620002d0565b935050602084015167ffffffffffffffff811115620003b057620003af6200017f565b5b620003be86828701620002d0565b9250506040620003d1868287016200032a565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200042e57607f821691505b602082108103620004445762000443620003e6565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200046f565b620004ba86836200046f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200050762000501620004fb84620004d2565b620004dc565b620004d2565b9050919050565b6000819050919050565b6200052383620004e6565b6200053b62000532826200050e565b8484546200047c565b825550505050565b600090565b6200055262000543565b6200055f81848462000518565b505050565b5b8181101562000587576200057b60008262000548565b60018101905062000565565b5050565b601f821115620005d657620005a0816200044a565b620005ab846200045f565b81016020851015620005bb578190505b620005d3620005ca856200045f565b83018262000564565b50505b505050565b600082821c905092915050565b6000620005fb60001984600802620005db565b1980831691505092915050565b6000620006168383620005e8565b9150826002028217905092915050565b6200063182620003db565b67ffffffffffffffff8111156200064d576200064c6200019f565b5b62000659825462000415565b620006668282856200058b565b600060209050601f8311600181146200069e576000841562000689578287015190505b62000695858262000608565b86555062000705565b601f198416620006ae866200044a565b60005b82811015620006d857848901518255600182019150602085019450602081019050620006b1565b86831015620006f85784890151620006f4601f891682620005e8565b8355505b6001600288020188555050505b505050505050565b6112ab806200071d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461016957806395d89b41146101875780639dc29fac146101a5578063a9059cbb146101c1578063ddca3f43146101dd578063f2fde38b146101fb576100b4565b806306fdde03146100b9578063313ce567146100d75780633e032a3b146100f557806340c10f191461011357806370a082311461012f578063715018a61461015f575b600080fd5b6100c1610217565b6040516100ce9190610cc1565b60405180910390f35b6100df6102a5565b6040516100ec9190610cff565b60405180910390f35b6100fd6102b8565b60405161010a9190610d33565b60405180910390f35b61012d60048036038101906101289190610ddd565b6102be565b005b61014960048036038101906101449190610e1d565b610408565b6040516101569190610d33565b60405180910390f35b610167610420565b005b610171610434565b60405161017e9190610e59565b60405180910390f35b61018f61045d565b60405161019c9190610cc1565b60405180910390f35b6101bf60048036038101906101ba9190610ddd565b6104eb565b005b6101db60048036038101906101d69190610ddd565b610674565b005b6101e5610a06565b6040516101f29190610d33565b60405180910390f35b61021560048036038101906102109190610e1d565b610a0c565b005b6001805461022490610ea3565b80601f016020809104026020016040519081016040528092919081815260200182805461025090610ea3565b801561029d5780601f106102725761010080835404028352916020019161029d565b820191906000526020600020905b81548152906001019060200180831161028057829003601f168201915b505050505081565b600360009054906101000a900460ff1681565b60065481565b6102c6610a8f565b60008111610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030090610f46565b60405180910390fd5b61035b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b0d90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103fc9190610d33565b60405180910390a35050565b60046020528060005260406000206000915090505481565b610428610a8f565b6104326000610b23565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002805461046a90610ea3565b80601f016020809104026020016040519081016040528092919081815260200182805461049690610ea3565b80156104e35780601f106104b8576101008083540402835291602001916104e3565b820191906000526020600020905b8154815290600101906020018083116104c657829003601f168201915b505050505081565b6104f3610a8f565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056c90610fb2565b60405180910390fd5b6105c781600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be790919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106689190610d33565b60405180910390a35050565b6106aa6005546103e86106879190611001565b61069c6103e884610bfd90919063ffffffff16565b610c1390919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561072b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072290610fb2565b60405180910390fd5b6107b26103e86107a46006546103e86107449190611001565b61079685600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b0d90919063ffffffff16565b610bfd90919063ffffffff16565b610c1390919063ffffffff16565b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107fd9190611001565b111561083e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083590611081565b60405180910390fd5b6108c56108776005546103e86108549190611001565b6108696103e885610bfd90919063ffffffff16565b610c1390919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be790919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061095a81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b0d90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109fa9190610d33565b60405180910390a35050565b60055481565b610a14610a8f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7a90611113565b60405180910390fd5b610a8c81610b23565b50565b610a97610c29565b73ffffffffffffffffffffffffffffffffffffffff16610ab5610434565b73ffffffffffffffffffffffffffffffffffffffff1614610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b029061117f565b60405180910390fd5b565b60008183610b1b9190611001565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610bf5919061119f565b905092915050565b60008183610c0b91906111d3565b905092915050565b60008183610c219190611244565b905092915050565b600033905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c6b578082015181840152602081019050610c50565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c9382610c31565b610c9d8185610c3c565b9350610cad818560208601610c4d565b610cb681610c77565b840191505092915050565b60006020820190508181036000830152610cdb8184610c88565b905092915050565b600060ff82169050919050565b610cf981610ce3565b82525050565b6000602082019050610d146000830184610cf0565b92915050565b6000819050919050565b610d2d81610d1a565b82525050565b6000602082019050610d486000830184610d24565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7e82610d53565b9050919050565b610d8e81610d73565b8114610d9957600080fd5b50565b600081359050610dab81610d85565b92915050565b610dba81610d1a565b8114610dc557600080fd5b50565b600081359050610dd781610db1565b92915050565b60008060408385031215610df457610df3610d4e565b5b6000610e0285828601610d9c565b9250506020610e1385828601610dc8565b9150509250929050565b600060208284031215610e3357610e32610d4e565b5b6000610e4184828501610d9c565b91505092915050565b610e5381610d73565b82525050565b6000602082019050610e6e6000830184610e4a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ebb57607f821691505b602082108103610ece57610ecd610e74565b5b50919050565b7f43616e6e6f74206d696e74207a65726f206f72206e6567617469766520746f6b60008201527f656e732e00000000000000000000000000000000000000000000000000000000602082015250565b6000610f30602483610c3c565b9150610f3b82610ed4565b604082019050919050565b60006020820190508181036000830152610f5f81610f23565b9050919050565b7f4e6f7420656e6f7567682062616c616e63652e00000000000000000000000000600082015250565b6000610f9c601383610c3c565b9150610fa782610f66565b602082019050919050565b60006020820190508181036000830152610fcb81610f8f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061100c82610d1a565b915061101783610d1a565b925082820190508082111561102f5761102e610fd2565b5b92915050565b7f4578636565647320736c69707061676520726174652e00000000000000000000600082015250565b600061106b601683610c3c565b915061107682611035565b602082019050919050565b6000602082019050818103600083015261109a8161105e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110fd602683610c3c565b9150611108826110a1565b604082019050919050565b6000602082019050818103600083015261112c816110f0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611169602083610c3c565b915061117482611133565b602082019050919050565b600060208201905081810360008301526111988161115c565b9050919050565b60006111aa82610d1a565b91506111b583610d1a565b92508282039050818111156111cd576111cc610fd2565b5b92915050565b60006111de82610d1a565b91506111e983610d1a565b92508282026111f781610d1a565b9150828204841483151761120e5761120d610fd2565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061124f82610d1a565b915061125a83610d1a565b92508261126a57611269611215565b5b82820490509291505056fea2646970667358221220397a5c4736d14eaf95e8b20544f0efcba71ca205f58ad2a0e269ac907dd1ba4564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x19C8 CODESIZE SUB DUP1 PUSH3 0x19C8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x341 JUMP JUMPDEST PUSH3 0x5C PUSH3 0x50 PUSH3 0xA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x6D SWAP2 SWAP1 PUSH3 0x626 JUMP JUMPDEST POP DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x7F SWAP2 SWAP1 PUSH3 0x626 JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x70D JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x1D9 DUP3 PUSH3 0x18E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1FB JUMPI PUSH3 0x1FA PUSH3 0x19F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x210 PUSH3 0x170 JUMP JUMPDEST SWAP1 POP PUSH3 0x21E DUP3 DUP3 PUSH3 0x1CE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x241 JUMPI PUSH3 0x240 PUSH3 0x19F JUMP JUMPDEST JUMPDEST PUSH3 0x24C DUP3 PUSH3 0x18E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x279 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x25C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x29C PUSH3 0x296 DUP5 PUSH3 0x223 JUMP JUMPDEST PUSH3 0x204 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x2BB JUMPI PUSH3 0x2BA PUSH3 0x189 JUMP JUMPDEST JUMPDEST PUSH3 0x2C8 DUP5 DUP3 DUP6 PUSH3 0x259 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2E8 JUMPI PUSH3 0x2E7 PUSH3 0x184 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2FA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x285 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x31B DUP2 PUSH3 0x303 JUMP JUMPDEST DUP2 EQ PUSH3 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x33B DUP2 PUSH3 0x310 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x35D JUMPI PUSH3 0x35C PUSH3 0x17A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x37E JUMPI PUSH3 0x37D PUSH3 0x17F JUMP JUMPDEST JUMPDEST PUSH3 0x38C DUP7 DUP3 DUP8 ADD PUSH3 0x2D0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3B0 JUMPI PUSH3 0x3AF PUSH3 0x17F JUMP JUMPDEST JUMPDEST PUSH3 0x3BE DUP7 DUP3 DUP8 ADD PUSH3 0x2D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x3D1 DUP7 DUP3 DUP8 ADD PUSH3 0x32A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x42E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x444 JUMPI PUSH3 0x443 PUSH3 0x3E6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x4AE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x46F JUMP JUMPDEST PUSH3 0x4BA DUP7 DUP4 PUSH3 0x46F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x507 PUSH3 0x501 PUSH3 0x4FB DUP5 PUSH3 0x4D2 JUMP JUMPDEST PUSH3 0x4DC JUMP JUMPDEST PUSH3 0x4D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x523 DUP4 PUSH3 0x4E6 JUMP JUMPDEST PUSH3 0x53B PUSH3 0x532 DUP3 PUSH3 0x50E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x47C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x552 PUSH3 0x543 JUMP JUMPDEST PUSH3 0x55F DUP2 DUP5 DUP5 PUSH3 0x518 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x587 JUMPI PUSH3 0x57B PUSH1 0x0 DUP3 PUSH3 0x548 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x565 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x5D6 JUMPI PUSH3 0x5A0 DUP2 PUSH3 0x44A JUMP JUMPDEST PUSH3 0x5AB DUP5 PUSH3 0x45F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x5BB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x5D3 PUSH3 0x5CA DUP6 PUSH3 0x45F JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x564 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5FB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x5DB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x616 DUP4 DUP4 PUSH3 0x5E8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x631 DUP3 PUSH3 0x3DB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x64D JUMPI PUSH3 0x64C PUSH3 0x19F JUMP JUMPDEST JUMPDEST PUSH3 0x659 DUP3 SLOAD PUSH3 0x415 JUMP JUMPDEST PUSH3 0x666 DUP3 DUP3 DUP6 PUSH3 0x58B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x69E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x689 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x695 DUP6 DUP3 PUSH3 0x608 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x705 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x6AE DUP7 PUSH3 0x44A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6D8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6B1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x6F8 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x6F4 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x5E8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12AB DUP1 PUSH3 0x71D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FB JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x3E032A3B EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x420 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x224 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x250 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x272 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x280 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35B DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x428 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x432 PUSH1 0x0 PUSH2 0xB23 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0xEA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x496 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0xA8F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C7 DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x668 SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6AA PUSH1 0x5 SLOAD PUSH2 0x3E8 PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x69C PUSH2 0x3E8 DUP5 PUSH2 0xBFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x722 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 PUSH2 0x3E8 PUSH2 0x7A4 PUSH1 0x6 SLOAD PUSH2 0x3E8 PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x796 DUP6 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST GT ISZERO PUSH2 0x83E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x835 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C5 PUSH2 0x877 PUSH1 0x5 SLOAD PUSH2 0x3E8 PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x869 PUSH2 0x3E8 DUP6 PUSH2 0xBFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x95A DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9FA SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA14 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7A SWAP1 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8C DUP2 PUSH2 0xB23 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA97 PUSH2 0xC29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB5 PUSH2 0x434 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB1B SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xC0B SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xC21 SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC6B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC93 DUP3 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0xC9D DUP2 DUP6 PUSH2 0xC3C JUMP JUMPDEST SWAP4 POP PUSH2 0xCAD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xCB6 DUP2 PUSH2 0xC77 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCDB DUP2 DUP5 PUSH2 0xC88 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF9 DUP2 PUSH2 0xCE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD14 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD2D DUP2 PUSH2 0xD1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7E DUP3 PUSH2 0xD53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8E DUP2 PUSH2 0xD73 JUMP JUMPDEST DUP2 EQ PUSH2 0xD99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDAB DUP2 PUSH2 0xD85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDBA DUP2 PUSH2 0xD1A JUMP JUMPDEST DUP2 EQ PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD7 DUP2 PUSH2 0xDB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH2 0xDF3 PUSH2 0xD4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE02 DUP6 DUP3 DUP7 ADD PUSH2 0xD9C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE13 DUP6 DUP3 DUP7 ADD PUSH2 0xDC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE33 JUMPI PUSH2 0xE32 PUSH2 0xD4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE41 DUP5 DUP3 DUP6 ADD PUSH2 0xD9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE53 DUP2 PUSH2 0xD73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEBB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE74 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206D696E74207A65726F206F72206E6567617469766520746F6B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E732E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF30 PUSH1 0x24 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xF3B DUP3 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF5F DUP2 PUSH2 0xF23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E63652E00000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9C PUSH1 0x13 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xFA7 DUP3 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFCB DUP2 PUSH2 0xF8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100C DUP3 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x102F JUMPI PUSH2 0x102E PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578636565647320736C69707061676520726174652E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106B PUSH1 0x16 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1076 DUP3 PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x109A DUP2 PUSH2 0x105E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FD PUSH1 0x26 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1108 DUP3 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x112C DUP2 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 PUSH1 0x20 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 DUP3 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1198 DUP2 PUSH2 0x115C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AA DUP3 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP PUSH2 0x11B5 DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DE DUP3 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP PUSH2 0x11E9 DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11F7 DUP2 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x120E JUMPI PUSH2 0x120D PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x124F DUP3 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP PUSH2 0x125A DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x126A JUMPI PUSH2 0x1269 PUSH2 0x1215 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH27 0x5C4736D14EAF95E8B20544F0EFCBA71CA205F58AD2A0E269AC907D 0xD1 0xBA GASLIMIT PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "249:1713:7:-:0;;;637:1;616:22;;706:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;804:5:7;797:4;:12;;;;;;:::i;:::-;;829:7;820:6;:16;;;;;;:::i;:::-;;858:9;847:8;;:20;;;;;;;;;;;;;;;;;;706:169;;;249:1713;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:86::-;2712:7;2752:4;2745:5;2741:16;2730:27;;2677:86;;;:::o;2769:118::-;2840:22;2856:5;2840:22;:::i;:::-;2833:5;2830:33;2820:61;;2877:1;2874;2867:12;2820:61;2769:118;:::o;2893:139::-;2948:5;2979:6;2973:13;2964:22;;2995:31;3020:5;2995:31;:::i;:::-;2893:139;;;;:::o;3038:1005::-;3144:6;3152;3160;3209:2;3197:9;3188:7;3184:23;3180:32;3177:119;;;3215:79;;:::i;:::-;3177:119;3356:1;3345:9;3341:17;3335:24;3386:18;3378:6;3375:30;3372:117;;;3408:79;;:::i;:::-;3372:117;3513:74;3579:7;3570:6;3559:9;3555:22;3513:74;:::i;:::-;3503:84;;3306:291;3657:2;3646:9;3642:18;3636:25;3688:18;3680:6;3677:30;3674:117;;;3710:79;;:::i;:::-;3674:117;3815:74;3881:7;3872:6;3861:9;3857:22;3815:74;:::i;:::-;3805:84;;3607:292;3938:2;3964:62;4018:7;4009:6;3998:9;3994:22;3964:62;:::i;:::-;3954:72;;3909:127;3038:1005;;;;;:::o;4049:99::-;4101:6;4135:5;4129:12;4119:22;;4049:99;;;:::o;4154:180::-;4202:77;4199:1;4192:88;4299:4;4296:1;4289:15;4323:4;4320:1;4313:15;4340:320;4384:6;4421:1;4415:4;4411:12;4401:22;;4468:1;4462:4;4458:12;4489:18;4479:81;;4545:4;4537:6;4533:17;4523:27;;4479:81;4607:2;4599:6;4596:14;4576:18;4573:38;4570:84;;4626:18;;:::i;:::-;4570:84;4391:269;4340:320;;;:::o;4666:141::-;4715:4;4738:3;4730:11;;4761:3;4758:1;4751:14;4795:4;4792:1;4782:18;4774:26;;4666:141;;;:::o;4813:93::-;4850:6;4897:2;4892;4885:5;4881:14;4877:23;4867:33;;4813:93;;;:::o;4912:107::-;4956:8;5006:5;5000:4;4996:16;4975:37;;4912:107;;;;:::o;5025:393::-;5094:6;5144:1;5132:10;5128:18;5167:97;5197:66;5186:9;5167:97;:::i;:::-;5285:39;5315:8;5304:9;5285:39;:::i;:::-;5273:51;;5357:4;5353:9;5346:5;5342:21;5333:30;;5406:4;5396:8;5392:19;5385:5;5382:30;5372:40;;5101:317;;5025:393;;;;;:::o;5424:77::-;5461:7;5490:5;5479:16;;5424:77;;;:::o;5507:60::-;5535:3;5556:5;5549:12;;5507:60;;;:::o;5573:142::-;5623:9;5656:53;5674:34;5683:24;5701:5;5683:24;:::i;:::-;5674:34;:::i;:::-;5656:53;:::i;:::-;5643:66;;5573:142;;;:::o;5721:75::-;5764:3;5785:5;5778:12;;5721:75;;;:::o;5802:269::-;5912:39;5943:7;5912:39;:::i;:::-;5973:91;6022:41;6046:16;6022:41;:::i;:::-;6014:6;6007:4;6001:11;5973:91;:::i;:::-;5967:4;5960:105;5878:193;5802:269;;;:::o;6077:73::-;6122:3;6077:73;:::o;6156:189::-;6233:32;;:::i;:::-;6274:65;6332:6;6324;6318:4;6274:65;:::i;:::-;6209:136;6156:189;;:::o;6351:186::-;6411:120;6428:3;6421:5;6418:14;6411:120;;;6482:39;6519:1;6512:5;6482:39;:::i;:::-;6455:1;6448:5;6444:13;6435:22;;6411:120;;;6351:186;;:::o;6543:543::-;6644:2;6639:3;6636:11;6633:446;;;6678:38;6710:5;6678:38;:::i;:::-;6762:29;6780:10;6762:29;:::i;:::-;6752:8;6748:44;6945:2;6933:10;6930:18;6927:49;;;6966:8;6951:23;;6927:49;6989:80;7045:22;7063:3;7045:22;:::i;:::-;7035:8;7031:37;7018:11;6989:80;:::i;:::-;6648:431;;6633:446;6543:543;;;:::o;7092:117::-;7146:8;7196:5;7190:4;7186:16;7165:37;;7092:117;;;;:::o;7215:169::-;7259:6;7292:51;7340:1;7336:6;7328:5;7325:1;7321:13;7292:51;:::i;:::-;7288:56;7373:4;7367;7363:15;7353:25;;7266:118;7215:169;;;;:::o;7389:295::-;7465:4;7611:29;7636:3;7630:4;7611:29;:::i;:::-;7603:37;;7673:3;7670:1;7666:11;7660:4;7657:21;7649:29;;7389:295;;;;:::o;7689:1395::-;7806:37;7839:3;7806:37;:::i;:::-;7908:18;7900:6;7897:30;7894:56;;;7930:18;;:::i;:::-;7894:56;7974:38;8006:4;8000:11;7974:38;:::i;:::-;8059:67;8119:6;8111;8105:4;8059:67;:::i;:::-;8153:1;8177:4;8164:17;;8209:2;8201:6;8198:14;8226:1;8221:618;;;;8883:1;8900:6;8897:77;;;8949:9;8944:3;8940:19;8934:26;8925:35;;8897:77;9000:67;9060:6;9053:5;9000:67;:::i;:::-;8994:4;8987:81;8856:222;8191:887;;8221:618;8273:4;8269:9;8261:6;8257:22;8307:37;8339:4;8307:37;:::i;:::-;8366:1;8380:208;8394:7;8391:1;8388:14;8380:208;;;8473:9;8468:3;8464:19;8458:26;8450:6;8443:42;8524:1;8516:6;8512:14;8502:24;;8571:2;8560:9;8556:18;8543:31;;8417:4;8414:1;8410:12;8405:17;;8380:208;;;8616:6;8607:7;8604:19;8601:179;;;8674:9;8669:3;8665:19;8659:26;8717:48;8759:4;8751:6;8747:17;8736:9;8717:48;:::i;:::-;8709:6;8702:64;8624:156;8601:179;8826:1;8822;8814:6;8810:14;8806:22;8800:4;8793:36;8228:611;;;8191:887;;7781:1303;;;7689:1395;;:::o;249:1713:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 2703,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_814": {
									"entryPoint": 3113,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2851,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1000": {
									"entryPoint": 2829,
									"id": 1000,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1156": {
									"entryPoint": 1032,
									"id": 1156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_1267": {
									"entryPoint": 1259,
									"id": 1267,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_1152": {
									"entryPoint": 677,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_1045": {
									"entryPoint": 3091,
									"id": 1045,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@fee_1167": {
									"entryPoint": 2566,
									"id": 1167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1228": {
									"entryPoint": 702,
									"id": 1228,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_1030": {
									"entryPoint": 3069,
									"id": 1030,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1148": {
									"entryPoint": 535,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 1076,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1056,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@slippage_1169": {
									"entryPoint": 696,
									"id": 1169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1015": {
									"entryPoint": 3047,
									"id": 1015,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_1150": {
									"entryPoint": 1117,
									"id": 1150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2572,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1356": {
									"entryPoint": 1652,
									"id": 1356,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3149,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4629,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11359:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:8",
																"statements": []
															},
															"src": "378:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:8",
														"type": ""
													}
												],
												"src": "539:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:8",
														"type": ""
													}
												],
												"src": "647:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:8",
														"type": ""
													}
												],
												"src": "1030:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1392:43:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1402:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1417:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1424:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1413:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1402:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1374:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1384:7:8",
														"type": ""
													}
												],
												"src": "1349:86:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1502:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1519:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1540:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1524:15:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1524:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1512:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1490:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1497:3:8",
														"type": ""
													}
												],
												"src": "1441:112:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:120:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1663:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1675:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1663:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1739:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1752:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1763:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1748:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1699:39:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1699:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1625:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1637:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1648:4:8",
														"type": ""
													}
												],
												"src": "1559:214:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1824:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1834:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1845:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1834:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1806:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1816:7:8",
														"type": ""
													}
												],
												"src": "1779:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1927:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1944:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1967:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1949:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1949:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1937:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1937:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1915:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1922:3:8",
														"type": ""
													}
												],
												"src": "1862:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2084:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2094:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2117:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2094:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2187:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2198:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2130:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2130:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2056:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2068:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2079:4:8",
														"type": ""
													}
												],
												"src": "1986:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2264:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2280:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2274:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2247:6:8",
														"type": ""
													}
												],
												"src": "2214:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2384:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2401:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2404:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2394:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2394:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2295:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2527:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2517:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2418:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2611:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2607:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2596:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2568:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2578:7:8",
														"type": ""
													}
												],
												"src": "2541:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2718:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2728:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2757:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2739:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2739:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2728:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2700:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2710:7:8",
														"type": ""
													}
												],
												"src": "2673:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2818:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2875:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2884:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2887:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2877:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2877:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2841:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2866:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2848:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2848:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2838:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2838:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:43:8"
															},
															"nodeType": "YulIf",
															"src": "2828:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2811:5:8",
														"type": ""
													}
												],
												"src": "2775:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2955:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2965:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2987:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2974:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2965:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3030:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3003:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3003:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3003:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2933:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2941:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2949:5:8",
														"type": ""
													}
												],
												"src": "2903:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3091:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3148:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3157:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3160:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3150:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3150:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3150:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3114:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3139:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3121:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3121:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3111:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3111:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:43:8"
															},
															"nodeType": "YulIf",
															"src": "3101:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3084:5:8",
														"type": ""
													}
												],
												"src": "3048:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3228:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3238:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3260:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3247:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3247:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3238:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3303:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3276:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3276:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3206:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3214:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3222:5:8",
														"type": ""
													}
												],
												"src": "3176:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3404:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3450:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3452:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3452:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3452:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3425:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3434:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3421:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3421:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3417:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:32:8"
															},
															"nodeType": "YulIf",
															"src": "3414:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3543:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3558:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3572:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3562:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3587:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3622:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3633:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3618:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3618:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3642:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3597:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3597:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3587:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3670:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3685:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3699:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3689:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3715:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3750:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3761:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3746:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3746:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3770:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3725:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3725:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3715:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3366:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3377:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3389:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3397:6:8",
														"type": ""
													}
												],
												"src": "3321:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3867:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3913:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3915:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3915:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3915:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3888:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3897:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3884:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3884:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3909:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3880:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:32:8"
															},
															"nodeType": "YulIf",
															"src": "3877:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "4006:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4021:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4035:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4025:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4050:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4085:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4096:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4081:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4081:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4105:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4060:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4050:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3837:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3848:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3860:6:8",
														"type": ""
													}
												],
												"src": "3801:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4201:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4218:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4241:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4223:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4223:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4211:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4211:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4189:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4196:3:8",
														"type": ""
													}
												],
												"src": "4136:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4358:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4368:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4380:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4391:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4368:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4448:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4461:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4472:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4457:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4457:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4404:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4404:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4404:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4330:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4342:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4353:4:8",
														"type": ""
													}
												],
												"src": "4260:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4516:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4533:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4536:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4526:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4526:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4526:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4630:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4633:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4623:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4623:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4623:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4654:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4657:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4488:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4725:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4735:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4749:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4755:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4766:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4796:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4802:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4792:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4770:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4843:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4857:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4871:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4879:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4867:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4867:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4857:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4823:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4816:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4816:26:8"
															},
															"nodeType": "YulIf",
															"src": "4813:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4946:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4960:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4960:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4960:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4910:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4933:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4941:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4930:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4930:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4907:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4907:38:8"
															},
															"nodeType": "YulIf",
															"src": "4904:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4709:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4718:6:8",
														"type": ""
													}
												],
												"src": "4674:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5106:117:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5128:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5136:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5124:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5124:14:8"
																	},
																	{
																		"hexValue": "43616e6e6f74206d696e74207a65726f206f72206e6567617469766520746f6b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5140:34:8",
																		"type": "",
																		"value": "Cannot mint zero or negative tok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5117:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5117:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5117:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5196:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5204:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5192:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5192:15:8"
																	},
																	{
																		"hexValue": "656e732e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5209:6:8",
																		"type": "",
																		"value": "ens."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5185:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5185:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5185:31:8"
														}
													]
												},
												"name": "store_literal_in_memory_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5098:6:8",
														"type": ""
													}
												],
												"src": "5000:223:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5375:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5385:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5451:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5456:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5392:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5392:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5385:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5557:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4",
																	"nodeType": "YulIdentifier",
																	"src": "5468:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5468:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5570:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5581:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5586:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5577:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5577:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5570:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5363:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5371:3:8",
														"type": ""
													}
												],
												"src": "5229:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5772:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5782:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5794:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5805:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5790:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5790:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5782:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5829:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5840:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5825:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5825:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5848:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5854:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5818:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5818:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5818:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5874:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6008:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5882:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5874:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5752:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5767:4:8",
														"type": ""
													}
												],
												"src": "5601:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6132:63:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6154:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6162:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6150:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6150:14:8"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e63652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6166:21:8",
																		"type": "",
																		"value": "Not enough balance."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6143:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6143:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6124:6:8",
														"type": ""
													}
												],
												"src": "6026:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6347:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6357:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6428:2:8",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6364:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6357:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6529:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070",
																	"nodeType": "YulIdentifier",
																	"src": "6440:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6440:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6542:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6553:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6558:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6549:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6549:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6542:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6335:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6343:3:8",
														"type": ""
													}
												],
												"src": "6201:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6744:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6754:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6766:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6777:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6762:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6762:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6754:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6801:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6812:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6797:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6797:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6820:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6826:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6816:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6816:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6790:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6790:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6790:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6846:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6980:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6854:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6854:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6846:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6724:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6739:4:8",
														"type": ""
													}
												],
												"src": "6573:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7140:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7143:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7133:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7133:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7133:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7164:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7167:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7157:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7157:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7157:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6998:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7228:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7238:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7261:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7243:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7243:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7238:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7272:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7295:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7277:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7272:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7306:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7317:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7320:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7313:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7313:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7306:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7346:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7348:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7348:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7348:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7338:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7341:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7335:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7335:10:8"
															},
															"nodeType": "YulIf",
															"src": "7332:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7215:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7218:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7224:3:8",
														"type": ""
													}
												],
												"src": "7184:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7487:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7509:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7517:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7505:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7505:14:8"
																	},
																	{
																		"hexValue": "4578636565647320736c69707061676520726174652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7521:24:8",
																		"type": "",
																		"value": "Exceeds slippage rate."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7498:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7498:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7479:6:8",
														"type": ""
													}
												],
												"src": "7381:172:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7705:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7715:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7781:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7786:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7722:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7715:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7887:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f",
																	"nodeType": "YulIdentifier",
																	"src": "7798:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7798:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7798:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7900:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7911:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7916:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7907:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7907:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7900:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7693:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7701:3:8",
														"type": ""
													}
												],
												"src": "7559:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8102:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8112:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8124:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8135:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8120:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8120:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8112:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8159:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8170:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8178:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8184:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8174:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8174:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8148:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8148:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8204:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8338:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8212:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8212:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8204:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8082:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8097:4:8",
														"type": ""
													}
												],
												"src": "7931:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8462:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8484:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8492:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8480:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8496:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8473:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8473:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8552:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8560:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8548:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8548:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8565:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8541:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8541:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8541:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8454:6:8",
														"type": ""
													}
												],
												"src": "8356:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8733:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8743:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8809:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8814:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8750:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8750:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8743:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8915:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "8826:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8826:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8826:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8928:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8939:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8944:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8935:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8935:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8928:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8721:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8729:3:8",
														"type": ""
													}
												],
												"src": "8587:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9130:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9140:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9152:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9163:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9148:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9148:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9140:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9187:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9198:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9183:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9206:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9212:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9202:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9202:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9176:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9176:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9176:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9232:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9366:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9240:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9240:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9232:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9110:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9125:4:8",
														"type": ""
													}
												],
												"src": "8959:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9490:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9512:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9520:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9508:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9508:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9524:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9501:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9501:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9501:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9482:6:8",
														"type": ""
													}
												],
												"src": "9384:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9718:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9728:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9794:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9799:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9735:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9735:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9728:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9900:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "9811:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9811:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9811:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9913:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9924:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9929:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9920:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9913:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9706:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9714:3:8",
														"type": ""
													}
												],
												"src": "9572:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10115:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10125:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10137:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10148:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10133:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10133:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10125:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10172:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10183:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10168:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10168:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10191:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10197:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10187:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10187:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10161:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10161:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10161:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10217:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10351:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10225:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10225:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10217:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10095:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10110:4:8",
														"type": ""
													}
												],
												"src": "9944:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10414:149:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10424:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10447:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10429:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10429:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10424:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10458:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10481:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10463:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10463:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10458:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10492:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10504:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10507:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10500:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10500:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10492:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10534:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10536:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10536:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10536:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10525:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10531:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10522:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10522:11:8"
															},
															"nodeType": "YulIf",
															"src": "10519:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10400:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10403:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10409:4:8",
														"type": ""
													}
												],
												"src": "10369:194:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10617:362:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10627:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10650:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10632:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10632:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10627:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10661:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10684:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10666:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10666:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10661:1:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10695:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10718:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10721:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10714:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10714:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "10699:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10732:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "10761:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10743:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10743:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10732:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10950:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10952:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10952:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10952:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10883:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10876:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10876:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10906:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10913:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10922:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10909:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10909:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10903:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10903:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10856:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10856:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10836:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10836:113:8"
															},
															"nodeType": "YulIf",
															"src": "10833:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10600:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10603:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10609:7:8",
														"type": ""
													}
												],
												"src": "10569:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11013:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11030:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11033:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11023:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11023:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11023:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11127:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11130:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11120:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11151:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11154:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11144:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11144:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11144:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10985:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11213:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11223:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11246:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11228:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11228:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11223:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11257:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11280:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11262:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11262:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11257:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11304:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11306:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11306:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11306:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11301:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11294:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11294:9:8"
															},
															"nodeType": "YulIf",
															"src": "11291:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11336:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11345:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11348:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11341:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11341:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11336:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11202:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11205:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11211:1:8",
														"type": ""
													}
												],
												"src": "11171:185:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot mint zero or negative tok\")\n\n        mstore(add(memPtr, 32), \"ens.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough balance.\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds slippage rate.\")\n\n    }\n\n    function abi_encode_t_stringliteral_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461016957806395d89b41146101875780639dc29fac146101a5578063a9059cbb146101c1578063ddca3f43146101dd578063f2fde38b146101fb576100b4565b806306fdde03146100b9578063313ce567146100d75780633e032a3b146100f557806340c10f191461011357806370a082311461012f578063715018a61461015f575b600080fd5b6100c1610217565b6040516100ce9190610cc1565b60405180910390f35b6100df6102a5565b6040516100ec9190610cff565b60405180910390f35b6100fd6102b8565b60405161010a9190610d33565b60405180910390f35b61012d60048036038101906101289190610ddd565b6102be565b005b61014960048036038101906101449190610e1d565b610408565b6040516101569190610d33565b60405180910390f35b610167610420565b005b610171610434565b60405161017e9190610e59565b60405180910390f35b61018f61045d565b60405161019c9190610cc1565b60405180910390f35b6101bf60048036038101906101ba9190610ddd565b6104eb565b005b6101db60048036038101906101d69190610ddd565b610674565b005b6101e5610a06565b6040516101f29190610d33565b60405180910390f35b61021560048036038101906102109190610e1d565b610a0c565b005b6001805461022490610ea3565b80601f016020809104026020016040519081016040528092919081815260200182805461025090610ea3565b801561029d5780601f106102725761010080835404028352916020019161029d565b820191906000526020600020905b81548152906001019060200180831161028057829003601f168201915b505050505081565b600360009054906101000a900460ff1681565b60065481565b6102c6610a8f565b60008111610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030090610f46565b60405180910390fd5b61035b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b0d90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103fc9190610d33565b60405180910390a35050565b60046020528060005260406000206000915090505481565b610428610a8f565b6104326000610b23565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002805461046a90610ea3565b80601f016020809104026020016040519081016040528092919081815260200182805461049690610ea3565b80156104e35780601f106104b8576101008083540402835291602001916104e3565b820191906000526020600020905b8154815290600101906020018083116104c657829003601f168201915b505050505081565b6104f3610a8f565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056c90610fb2565b60405180910390fd5b6105c781600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be790919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106689190610d33565b60405180910390a35050565b6106aa6005546103e86106879190611001565b61069c6103e884610bfd90919063ffffffff16565b610c1390919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561072b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072290610fb2565b60405180910390fd5b6107b26103e86107a46006546103e86107449190611001565b61079685600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b0d90919063ffffffff16565b610bfd90919063ffffffff16565b610c1390919063ffffffff16565b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107fd9190611001565b111561083e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083590611081565b60405180910390fd5b6108c56108776005546103e86108549190611001565b6108696103e885610bfd90919063ffffffff16565b610c1390919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be790919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061095a81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b0d90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109fa9190610d33565b60405180910390a35050565b60055481565b610a14610a8f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7a90611113565b60405180910390fd5b610a8c81610b23565b50565b610a97610c29565b73ffffffffffffffffffffffffffffffffffffffff16610ab5610434565b73ffffffffffffffffffffffffffffffffffffffff1614610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b029061117f565b60405180910390fd5b565b60008183610b1b9190611001565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610bf5919061119f565b905092915050565b60008183610c0b91906111d3565b905092915050565b60008183610c219190611244565b905092915050565b600033905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c6b578082015181840152602081019050610c50565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c9382610c31565b610c9d8185610c3c565b9350610cad818560208601610c4d565b610cb681610c77565b840191505092915050565b60006020820190508181036000830152610cdb8184610c88565b905092915050565b600060ff82169050919050565b610cf981610ce3565b82525050565b6000602082019050610d146000830184610cf0565b92915050565b6000819050919050565b610d2d81610d1a565b82525050565b6000602082019050610d486000830184610d24565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7e82610d53565b9050919050565b610d8e81610d73565b8114610d9957600080fd5b50565b600081359050610dab81610d85565b92915050565b610dba81610d1a565b8114610dc557600080fd5b50565b600081359050610dd781610db1565b92915050565b60008060408385031215610df457610df3610d4e565b5b6000610e0285828601610d9c565b9250506020610e1385828601610dc8565b9150509250929050565b600060208284031215610e3357610e32610d4e565b5b6000610e4184828501610d9c565b91505092915050565b610e5381610d73565b82525050565b6000602082019050610e6e6000830184610e4a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ebb57607f821691505b602082108103610ece57610ecd610e74565b5b50919050565b7f43616e6e6f74206d696e74207a65726f206f72206e6567617469766520746f6b60008201527f656e732e00000000000000000000000000000000000000000000000000000000602082015250565b6000610f30602483610c3c565b9150610f3b82610ed4565b604082019050919050565b60006020820190508181036000830152610f5f81610f23565b9050919050565b7f4e6f7420656e6f7567682062616c616e63652e00000000000000000000000000600082015250565b6000610f9c601383610c3c565b9150610fa782610f66565b602082019050919050565b60006020820190508181036000830152610fcb81610f8f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061100c82610d1a565b915061101783610d1a565b925082820190508082111561102f5761102e610fd2565b5b92915050565b7f4578636565647320736c69707061676520726174652e00000000000000000000600082015250565b600061106b601683610c3c565b915061107682611035565b602082019050919050565b6000602082019050818103600083015261109a8161105e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110fd602683610c3c565b9150611108826110a1565b604082019050919050565b6000602082019050818103600083015261112c816110f0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611169602083610c3c565b915061117482611133565b602082019050919050565b600060208201905081810360008301526111988161115c565b9050919050565b60006111aa82610d1a565b91506111b583610d1a565b92508282039050818111156111cd576111cc610fd2565b5b92915050565b60006111de82610d1a565b91506111e983610d1a565b92508282026111f781610d1a565b9150828204841483151761120e5761120d610fd2565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061124f82610d1a565b915061125a83610d1a565b92508261126a57611269611215565b5b82820490509291505056fea2646970667358221220397a5c4736d14eaf95e8b20544f0efcba71ca205f58ad2a0e269ac907dd1ba4564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FB JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x3E032A3B EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x2BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH2 0x420 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E5 PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x224 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x250 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x29D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x272 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x29D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x280 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35B DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x428 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x432 PUSH1 0x0 PUSH2 0xB23 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0xEA3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x496 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0xA8F JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C7 DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x668 SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6AA PUSH1 0x5 SLOAD PUSH2 0x3E8 PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x69C PUSH2 0x3E8 DUP5 PUSH2 0xBFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x72B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x722 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 PUSH2 0x3E8 PUSH2 0x7A4 PUSH1 0x6 SLOAD PUSH2 0x3E8 PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x796 DUP6 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST GT ISZERO PUSH2 0x83E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x835 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C5 PUSH2 0x877 PUSH1 0x5 SLOAD PUSH2 0x3E8 PUSH2 0x854 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x869 PUSH2 0x3E8 DUP6 PUSH2 0xBFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC13 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x95A DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB0D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9FA SWAP2 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA14 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7A SWAP1 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8C DUP2 PUSH2 0xB23 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA97 PUSH2 0xC29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB5 PUSH2 0x434 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP1 PUSH2 0x117F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB1B SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x119F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xC0B SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xC21 SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC6B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC93 DUP3 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0xC9D DUP2 DUP6 PUSH2 0xC3C JUMP JUMPDEST SWAP4 POP PUSH2 0xCAD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xCB6 DUP2 PUSH2 0xC77 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCDB DUP2 DUP5 PUSH2 0xC88 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF9 DUP2 PUSH2 0xCE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD14 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD2D DUP2 PUSH2 0xD1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7E DUP3 PUSH2 0xD53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8E DUP2 PUSH2 0xD73 JUMP JUMPDEST DUP2 EQ PUSH2 0xD99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDAB DUP2 PUSH2 0xD85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDBA DUP2 PUSH2 0xD1A JUMP JUMPDEST DUP2 EQ PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD7 DUP2 PUSH2 0xDB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH2 0xDF3 PUSH2 0xD4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE02 DUP6 DUP3 DUP7 ADD PUSH2 0xD9C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE13 DUP6 DUP3 DUP7 ADD PUSH2 0xDC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE33 JUMPI PUSH2 0xE32 PUSH2 0xD4E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE41 DUP5 DUP3 DUP6 ADD PUSH2 0xD9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE53 DUP2 PUSH2 0xD73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEBB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE74 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206D696E74207A65726F206F72206E6567617469766520746F6B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E732E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF30 PUSH1 0x24 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xF3B DUP3 PUSH2 0xED4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF5F DUP2 PUSH2 0xF23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E63652E00000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF9C PUSH1 0x13 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xFA7 DUP3 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFCB DUP2 PUSH2 0xF8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100C DUP3 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x102F JUMPI PUSH2 0x102E PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578636565647320736C69707061676520726174652E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106B PUSH1 0x16 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1076 DUP3 PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x109A DUP2 PUSH2 0x105E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FD PUSH1 0x26 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1108 DUP3 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x112C DUP2 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 PUSH1 0x20 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 DUP3 PUSH2 0x1133 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1198 DUP2 PUSH2 0x115C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AA DUP3 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP PUSH2 0x11B5 DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DE DUP3 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP PUSH2 0x11E9 DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11F7 DUP2 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x120E JUMPI PUSH2 0x120D PUSH2 0xFD2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x124F DUP3 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP PUSH2 0x125A DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x126A JUMPI PUSH2 0x1269 PUSH2 0x1215 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH27 0x5C4736D14EAF95E8B20544F0EFCBA71CA205F58AD2A0E269AC907D 0xD1 0xBA GASLIMIT PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "249:1713:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;403:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;674:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;907:257;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;431:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;376:20:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1196:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1483:476;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;616:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;351:18:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;403:21::-;;;;;;;;;;;;;:::o;674:23::-;;;;:::o;907:257::-;1094:13:0;:11;:13::i;:::-;999:1:7::1;990:6;:10;982:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1073:30;1096:6;1073:9;:18;1083:7;1073:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;1052:9;:18;1062:7;1052:18;;;;;;;;;;;;;;;:51;;;;1140:7;1119:37;;1136:1;1119:37;;;1149:6;1119:37;;;;;;:::i;:::-;;;;;;;;907:257:::0;;:::o;431:44::-;;;;;;;;;;;;;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;376:20:7:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1196:258::-;1094:13:0;:11;:13::i;:::-;1301:6:7::1;1279:9;:18;1289:7;1279:18;;;;;;;;;;;;;;;;:28;;1271:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1363:30;1386:6;1363:9;:18;1373:7;1363:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;1342:9;:18;1352:7;1342:18;;;;;;;;;;;;;;;:51;;;;1435:1;1409:37;;1418:7;1409:37;;;1439:6;1409:37;;;;;;:::i;:::-;;;;;;;;1196:258:::0;;:::o;1483:476::-;1579:31;1606:3;;1599:4;:10;;;;:::i;:::-;1579:15;1589:4;1579:5;:9;;:15;;;;:::i;:::-;:19;;:31;;;;:::i;:::-;1554:9;:21;1564:10;1554:21;;;;;;;;;;;;;;;;:56;;1546:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1678:55;1728:4;1678:45;1714:8;;1707:4;:15;;;;:::i;:::-;1678:24;1696:5;1678:9;:13;1688:2;1678:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;:28;;:45;;;;:::i;:::-;:49;;:55;;;;:::i;:::-;1669:5;1653:9;:13;1663:2;1653:13;;;;;;;;;;;;;;;;:21;;;;:::i;:::-;:80;;1645:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;1795:58;1821:31;1848:3;;1841:4;:10;;;;:::i;:::-;1821:15;1831:4;1821:5;:9;;:15;;;;:::i;:::-;:19;;:31;;;;:::i;:::-;1795:9;:21;1805:10;1795:21;;;;;;;;;;;;;;;;:25;;:58;;;;:::i;:::-;1771:9;:21;1781:10;1771:21;;;;;;;;;;;;;;;:82;;;;1880:24;1898:5;1880:9;:13;1890:2;1880:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1864:9;:13;1874:2;1864:13;;;;;;;;;;;;;;;:40;;;;1941:2;1920:31;;1929:10;1920:31;;;1945:5;1920:31;;;;;;:::i;:::-;;;;;;;;1483:476;;:::o;616:22::-;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2755:96:6:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3122:96:6:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;640::5:-;693:7;719:10;712:17;;640:96;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:86::-;1384:7;1424:4;1417:5;1413:16;1402:27;;1349:86;;;:::o;1441:112::-;1524:22;1540:5;1524:22;:::i;:::-;1519:3;1512:35;1441:112;;:::o;1559:214::-;1648:4;1686:2;1675:9;1671:18;1663:26;;1699:67;1763:1;1752:9;1748:17;1739:6;1699:67;:::i;:::-;1559:214;;;;:::o;1779:77::-;1816:7;1845:5;1834:16;;1779:77;;;:::o;1862:118::-;1949:24;1967:5;1949:24;:::i;:::-;1944:3;1937:37;1862:118;;:::o;1986:222::-;2079:4;2117:2;2106:9;2102:18;2094:26;;2130:71;2198:1;2187:9;2183:17;2174:6;2130:71;:::i;:::-;1986:222;;;;:::o;2295:117::-;2404:1;2401;2394:12;2541:126;2578:7;2618:42;2611:5;2607:54;2596:65;;2541:126;;;:::o;2673:96::-;2710:7;2739:24;2757:5;2739:24;:::i;:::-;2728:35;;2673:96;;;:::o;2775:122::-;2848:24;2866:5;2848:24;:::i;:::-;2841:5;2838:35;2828:63;;2887:1;2884;2877:12;2828:63;2775:122;:::o;2903:139::-;2949:5;2987:6;2974:20;2965:29;;3003:33;3030:5;3003:33;:::i;:::-;2903:139;;;;:::o;3048:122::-;3121:24;3139:5;3121:24;:::i;:::-;3114:5;3111:35;3101:63;;3160:1;3157;3150:12;3101:63;3048:122;:::o;3176:139::-;3222:5;3260:6;3247:20;3238:29;;3276:33;3303:5;3276:33;:::i;:::-;3176:139;;;;:::o;3321:474::-;3389:6;3397;3446:2;3434:9;3425:7;3421:23;3417:32;3414:119;;;3452:79;;:::i;:::-;3414:119;3572:1;3597:53;3642:7;3633:6;3622:9;3618:22;3597:53;:::i;:::-;3587:63;;3543:117;3699:2;3725:53;3770:7;3761:6;3750:9;3746:22;3725:53;:::i;:::-;3715:63;;3670:118;3321:474;;;;;:::o;3801:329::-;3860:6;3909:2;3897:9;3888:7;3884:23;3880:32;3877:119;;;3915:79;;:::i;:::-;3877:119;4035:1;4060:53;4105:7;4096:6;4085:9;4081:22;4060:53;:::i;:::-;4050:63;;4006:117;3801:329;;;;:::o;4136:118::-;4223:24;4241:5;4223:24;:::i;:::-;4218:3;4211:37;4136:118;;:::o;4260:222::-;4353:4;4391:2;4380:9;4376:18;4368:26;;4404:71;4472:1;4461:9;4457:17;4448:6;4404:71;:::i;:::-;4260:222;;;;:::o;4488:180::-;4536:77;4533:1;4526:88;4633:4;4630:1;4623:15;4657:4;4654:1;4647:15;4674:320;4718:6;4755:1;4749:4;4745:12;4735:22;;4802:1;4796:4;4792:12;4823:18;4813:81;;4879:4;4871:6;4867:17;4857:27;;4813:81;4941:2;4933:6;4930:14;4910:18;4907:38;4904:84;;4960:18;;:::i;:::-;4904:84;4725:269;4674:320;;;:::o;5000:223::-;5140:34;5136:1;5128:6;5124:14;5117:58;5209:6;5204:2;5196:6;5192:15;5185:31;5000:223;:::o;5229:366::-;5371:3;5392:67;5456:2;5451:3;5392:67;:::i;:::-;5385:74;;5468:93;5557:3;5468:93;:::i;:::-;5586:2;5581:3;5577:12;5570:19;;5229:366;;;:::o;5601:419::-;5767:4;5805:2;5794:9;5790:18;5782:26;;5854:9;5848:4;5844:20;5840:1;5829:9;5825:17;5818:47;5882:131;6008:4;5882:131;:::i;:::-;5874:139;;5601:419;;;:::o;6026:169::-;6166:21;6162:1;6154:6;6150:14;6143:45;6026:169;:::o;6201:366::-;6343:3;6364:67;6428:2;6423:3;6364:67;:::i;:::-;6357:74;;6440:93;6529:3;6440:93;:::i;:::-;6558:2;6553:3;6549:12;6542:19;;6201:366;;;:::o;6573:419::-;6739:4;6777:2;6766:9;6762:18;6754:26;;6826:9;6820:4;6816:20;6812:1;6801:9;6797:17;6790:47;6854:131;6980:4;6854:131;:::i;:::-;6846:139;;6573:419;;;:::o;6998:180::-;7046:77;7043:1;7036:88;7143:4;7140:1;7133:15;7167:4;7164:1;7157:15;7184:191;7224:3;7243:20;7261:1;7243:20;:::i;:::-;7238:25;;7277:20;7295:1;7277:20;:::i;:::-;7272:25;;7320:1;7317;7313:9;7306:16;;7341:3;7338:1;7335:10;7332:36;;;7348:18;;:::i;:::-;7332:36;7184:191;;;;:::o;7381:172::-;7521:24;7517:1;7509:6;7505:14;7498:48;7381:172;:::o;7559:366::-;7701:3;7722:67;7786:2;7781:3;7722:67;:::i;:::-;7715:74;;7798:93;7887:3;7798:93;:::i;:::-;7916:2;7911:3;7907:12;7900:19;;7559:366;;;:::o;7931:419::-;8097:4;8135:2;8124:9;8120:18;8112:26;;8184:9;8178:4;8174:20;8170:1;8159:9;8155:17;8148:47;8212:131;8338:4;8212:131;:::i;:::-;8204:139;;7931:419;;;:::o;8356:225::-;8496:34;8492:1;8484:6;8480:14;8473:58;8565:8;8560:2;8552:6;8548:15;8541:33;8356:225;:::o;8587:366::-;8729:3;8750:67;8814:2;8809:3;8750:67;:::i;:::-;8743:74;;8826:93;8915:3;8826:93;:::i;:::-;8944:2;8939:3;8935:12;8928:19;;8587:366;;;:::o;8959:419::-;9125:4;9163:2;9152:9;9148:18;9140:26;;9212:9;9206:4;9202:20;9198:1;9187:9;9183:17;9176:47;9240:131;9366:4;9240:131;:::i;:::-;9232:139;;8959:419;;;:::o;9384:182::-;9524:34;9520:1;9512:6;9508:14;9501:58;9384:182;:::o;9572:366::-;9714:3;9735:67;9799:2;9794:3;9735:67;:::i;:::-;9728:74;;9811:93;9900:3;9811:93;:::i;:::-;9929:2;9924:3;9920:12;9913:19;;9572:366;;;:::o;9944:419::-;10110:4;10148:2;10137:9;10133:18;10125:26;;10197:9;10191:4;10187:20;10183:1;10172:9;10168:17;10161:47;10225:131;10351:4;10225:131;:::i;:::-;10217:139;;9944:419;;;:::o;10369:194::-;10409:4;10429:20;10447:1;10429:20;:::i;:::-;10424:25;;10463:20;10481:1;10463:20;:::i;:::-;10458:25;;10507:1;10504;10500:9;10492:17;;10531:1;10525:4;10522:11;10519:37;;;10536:18;;:::i;:::-;10519:37;10369:194;;;;:::o;10569:410::-;10609:7;10632:20;10650:1;10632:20;:::i;:::-;10627:25;;10666:20;10684:1;10666:20;:::i;:::-;10661:25;;10721:1;10718;10714:9;10743:30;10761:11;10743:30;:::i;:::-;10732:41;;10922:1;10913:7;10909:15;10906:1;10903:22;10883:1;10876:9;10856:83;10833:139;;10952:18;;:::i;:::-;10833:139;10617:362;10569:410;;;;:::o;10985:180::-;11033:77;11030:1;11023:88;11130:4;11127:1;11120:15;11154:4;11151:1;11144:15;11171:185;11211:1;11228:20;11246:1;11228:20;:::i;:::-;11223:25;;11262:20;11280:1;11262:20;:::i;:::-;11257:25;;11301:1;11291:35;;11306:18;;:::i;:::-;11291:35;11348:1;11345;11341:9;11336:14;;11171:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "955800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2903",
								"burn(address,uint256)": "infinite",
								"decimals()": "2494",
								"fee()": "2517",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2522",
								"renounceOwnership()": "30509",
								"slippage()": "2474",
								"symbol()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferOwnership(address)": "30854"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 1962,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 616,
									"end": 638,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 616,
									"end": 638,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 706,
									"end": 875,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 706,
									"end": 875,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 706,
									"end": 875,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 706,
									"end": 875,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 706,
									"end": 875,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 706,
									"end": 875,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 706,
									"end": 875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 706,
									"end": 875,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 804,
									"end": 809,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 797,
									"end": 801,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 797,
									"end": 809,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 797,
									"end": 809,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 797,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 797,
									"end": 809,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 797,
									"end": 809,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 797,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 797,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 797,
									"end": 809,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 797,
									"end": 809,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 797,
									"end": 809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 829,
									"end": 836,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 820,
									"end": 826,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 820,
									"end": 836,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 820,
									"end": 836,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 820,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 820,
									"end": 836,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 820,
									"end": 836,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 820,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 820,
									"end": 836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 820,
									"end": 836,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 820,
									"end": 836,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 820,
									"end": 836,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 858,
									"end": 867,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 847,
									"end": 855,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 847,
									"end": 855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 867,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 847,
									"end": 867,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 847,
									"end": 867,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 847,
									"end": 867,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 847,
									"end": 867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 706,
									"end": 875,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2763,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2677,
									"end": 2763,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2712,
									"end": 2719,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2756,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 2745,
									"end": 2750,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2741,
									"end": 2757,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2730,
									"end": 2757,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2730,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2763,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2763,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2763,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2763,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2769,
									"end": 2887,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2769,
									"end": 2887,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2840,
									"end": 2862,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2856,
									"end": 2861,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2840,
									"end": 2862,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2840,
									"end": 2862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2840,
									"end": 2862,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2840,
									"end": 2862,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 2838,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2863,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2820,
									"end": 2881,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 2820,
									"end": 2881,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2877,
									"end": 2878,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2874,
									"end": 2875,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2867,
									"end": 2879,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2820,
									"end": 2881,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 2820,
									"end": 2881,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2769,
									"end": 2887,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2769,
									"end": 2887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2893,
									"end": 3032,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2893,
									"end": 3032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2948,
									"end": 2953,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2979,
									"end": 2985,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2973,
									"end": 2986,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2964,
									"end": 2986,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2964,
									"end": 2986,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 3020,
									"end": 3025,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2995,
									"end": 3026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3026,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 2995,
									"end": 3026,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2893,
									"end": 3032,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2893,
									"end": 3032,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2893,
									"end": 3032,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2893,
									"end": 3032,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2893,
									"end": 3032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 4043,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3038,
									"end": 4043,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3144,
									"end": 3150,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3152,
									"end": 3158,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3160,
									"end": 3166,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3209,
									"end": 3211,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 3197,
									"end": 3206,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3195,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3184,
									"end": 3207,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3180,
									"end": 3212,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 3177,
									"end": 3296,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3177,
									"end": 3296,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3177,
									"end": 3296,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3215,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 3215,
									"end": 3294,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 3215,
									"end": 3294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3215,
									"end": 3294,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 3215,
									"end": 3294,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3177,
									"end": 3296,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3177,
									"end": 3296,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3356,
									"end": 3357,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3345,
									"end": 3354,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3341,
									"end": 3358,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3335,
									"end": 3359,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3386,
									"end": 3404,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3378,
									"end": 3384,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3375,
									"end": 3405,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3372,
									"end": 3489,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3372,
									"end": 3489,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3372,
									"end": 3489,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3408,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3408,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3408,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3408,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3408,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3372,
									"end": 3489,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3372,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3513,
									"end": 3587,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 3579,
									"end": 3586,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3570,
									"end": 3576,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3559,
									"end": 3568,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3555,
									"end": 3577,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3513,
									"end": 3587,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 3513,
									"end": 3587,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3513,
									"end": 3587,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 3513,
									"end": 3587,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3503,
									"end": 3587,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3503,
									"end": 3587,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3306,
									"end": 3597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3659,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3646,
									"end": 3655,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3642,
									"end": 3660,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3636,
									"end": 3661,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3688,
									"end": 3706,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3680,
									"end": 3686,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3677,
									"end": 3707,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3674,
									"end": 3791,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3674,
									"end": 3791,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 3674,
									"end": 3791,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3710,
									"end": 3789,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 3710,
									"end": 3789,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3710,
									"end": 3789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3710,
									"end": 3789,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 3710,
									"end": 3789,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3674,
									"end": 3791,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 3674,
									"end": 3791,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3815,
									"end": 3889,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3881,
									"end": 3888,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3872,
									"end": 3878,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3861,
									"end": 3870,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3857,
									"end": 3879,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3815,
									"end": 3889,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 3815,
									"end": 3889,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3815,
									"end": 3889,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 3815,
									"end": 3889,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3805,
									"end": 3889,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3805,
									"end": 3889,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3607,
									"end": 3899,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3938,
									"end": 3940,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3964,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4018,
									"end": 4025,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4009,
									"end": 4015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3998,
									"end": 4007,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3994,
									"end": 4016,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3964,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 3964,
									"end": 4026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3964,
									"end": 4026,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 3964,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3954,
									"end": 4026,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3954,
									"end": 4026,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4036,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 4043,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 4043,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 4043,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 4043,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 4043,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 4043,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4148,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 4049,
									"end": 4148,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4107,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4135,
									"end": 4140,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4129,
									"end": 4141,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4119,
									"end": 4141,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4119,
									"end": 4141,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4148,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4148,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4148,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4049,
									"end": 4148,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4154,
									"end": 4334,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 4154,
									"end": 4334,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4279,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4199,
									"end": 4200,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4192,
									"end": 4280,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4299,
									"end": 4303,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 4296,
									"end": 4297,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4289,
									"end": 4304,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4323,
									"end": 4327,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4320,
									"end": 4321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4313,
									"end": 4328,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4340,
									"end": 4660,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 4340,
									"end": 4660,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4384,
									"end": 4390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4421,
									"end": 4422,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4415,
									"end": 4419,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4411,
									"end": 4423,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4468,
									"end": 4469,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4462,
									"end": 4466,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4458,
									"end": 4470,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4489,
									"end": 4507,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4479,
									"end": 4560,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4479,
									"end": 4560,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4545,
									"end": 4549,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 4537,
									"end": 4543,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4533,
									"end": 4550,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4523,
									"end": 4550,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4523,
									"end": 4550,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4479,
									"end": 4560,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4479,
									"end": 4560,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4607,
									"end": 4609,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4599,
									"end": 4605,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4596,
									"end": 4610,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 4594,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4573,
									"end": 4611,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4570,
									"end": 4654,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 4570,
									"end": 4654,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4626,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 4626,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 4626,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4626,
									"end": 4644,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 4626,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4570,
									"end": 4654,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 4570,
									"end": 4654,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4391,
									"end": 4660,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4340,
									"end": 4660,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4340,
									"end": 4660,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4340,
									"end": 4660,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4340,
									"end": 4660,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4666,
									"end": 4807,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4666,
									"end": 4807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4715,
									"end": 4719,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4738,
									"end": 4741,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4730,
									"end": 4741,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4730,
									"end": 4741,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4764,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4758,
									"end": 4759,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4751,
									"end": 4765,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4795,
									"end": 4799,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4792,
									"end": 4793,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4782,
									"end": 4800,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 4774,
									"end": 4800,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4774,
									"end": 4800,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4666,
									"end": 4807,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4666,
									"end": 4807,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4666,
									"end": 4807,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4666,
									"end": 4807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4906,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 4813,
									"end": 4906,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4850,
									"end": 4856,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4897,
									"end": 4899,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4892,
									"end": 4894,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4885,
									"end": 4890,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4881,
									"end": 4895,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4877,
									"end": 4900,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4867,
									"end": 4900,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4867,
									"end": 4900,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4906,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4906,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4906,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4813,
									"end": 4906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4912,
									"end": 5019,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 4912,
									"end": 5019,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4956,
									"end": 4964,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5006,
									"end": 5011,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5000,
									"end": 5004,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5012,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4975,
									"end": 5012,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4975,
									"end": 5012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4912,
									"end": 5019,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4912,
									"end": 5019,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4912,
									"end": 5019,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4912,
									"end": 5019,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4912,
									"end": 5019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5025,
									"end": 5418,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5025,
									"end": 5418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5094,
									"end": 5100,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5144,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5132,
									"end": 5142,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5128,
									"end": 5146,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5167,
									"end": 5264,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 5197,
									"end": 5263,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5186,
									"end": 5195,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5167,
									"end": 5264,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 5167,
									"end": 5264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5167,
									"end": 5264,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 5167,
									"end": 5264,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5285,
									"end": 5324,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 5315,
									"end": 5323,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5304,
									"end": 5313,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5285,
									"end": 5324,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 5285,
									"end": 5324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5285,
									"end": 5324,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 5285,
									"end": 5324,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5324,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 5273,
									"end": 5324,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5357,
									"end": 5361,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5353,
									"end": 5362,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5346,
									"end": 5351,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5342,
									"end": 5363,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5333,
									"end": 5363,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5333,
									"end": 5363,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5406,
									"end": 5410,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5396,
									"end": 5404,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5392,
									"end": 5411,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5385,
									"end": 5390,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5382,
									"end": 5412,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5372,
									"end": 5412,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5372,
									"end": 5412,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5101,
									"end": 5418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5101,
									"end": 5418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5025,
									"end": 5418,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5025,
									"end": 5418,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5025,
									"end": 5418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5025,
									"end": 5418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5025,
									"end": 5418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5025,
									"end": 5418,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5424,
									"end": 5501,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5424,
									"end": 5501,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 5468,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5490,
									"end": 5495,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5479,
									"end": 5495,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5479,
									"end": 5495,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5424,
									"end": 5501,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5424,
									"end": 5501,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5424,
									"end": 5501,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5424,
									"end": 5501,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5507,
									"end": 5567,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 5507,
									"end": 5567,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5535,
									"end": 5538,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5556,
									"end": 5561,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5549,
									"end": 5561,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5549,
									"end": 5561,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5507,
									"end": 5567,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5507,
									"end": 5567,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5507,
									"end": 5567,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5507,
									"end": 5567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5573,
									"end": 5715,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 5573,
									"end": 5715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5623,
									"end": 5632,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5656,
									"end": 5709,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 5674,
									"end": 5708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 5683,
									"end": 5707,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 5701,
									"end": 5706,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5683,
									"end": 5707,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5683,
									"end": 5707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5683,
									"end": 5707,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 5683,
									"end": 5707,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5674,
									"end": 5708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 5674,
									"end": 5708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5674,
									"end": 5708,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 5674,
									"end": 5708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5656,
									"end": 5709,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5656,
									"end": 5709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5656,
									"end": 5709,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 5656,
									"end": 5709,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5643,
									"end": 5709,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5643,
									"end": 5709,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5573,
									"end": 5715,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5573,
									"end": 5715,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5573,
									"end": 5715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5573,
									"end": 5715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5721,
									"end": 5796,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5721,
									"end": 5796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5764,
									"end": 5767,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5785,
									"end": 5790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5778,
									"end": 5790,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5778,
									"end": 5790,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5721,
									"end": 5796,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5721,
									"end": 5796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5721,
									"end": 5796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5721,
									"end": 5796,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5802,
									"end": 6071,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 5802,
									"end": 6071,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5912,
									"end": 5951,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 5943,
									"end": 5950,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5912,
									"end": 5951,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 5912,
									"end": 5951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5912,
									"end": 5951,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 5951,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5973,
									"end": 6064,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 6022,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 6046,
									"end": 6062,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6022,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 6022,
									"end": 6063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6022,
									"end": 6063,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 6022,
									"end": 6063,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6014,
									"end": 6020,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6007,
									"end": 6011,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6001,
									"end": 6012,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5973,
									"end": 6064,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5973,
									"end": 6064,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5973,
									"end": 6064,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 5973,
									"end": 6064,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5967,
									"end": 5971,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5960,
									"end": 6065,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5878,
									"end": 6071,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5802,
									"end": 6071,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5802,
									"end": 6071,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5802,
									"end": 6071,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5802,
									"end": 6071,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6077,
									"end": 6150,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 6077,
									"end": 6150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6122,
									"end": 6125,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6077,
									"end": 6150,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6077,
									"end": 6150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6345,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 6156,
									"end": 6345,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6265,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 6233,
									"end": 6265,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 6233,
									"end": 6265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6233,
									"end": 6265,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 6233,
									"end": 6265,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6339,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 6332,
									"end": 6338,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6324,
									"end": 6330,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6318,
									"end": 6322,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6339,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 6274,
									"end": 6339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6339,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 6274,
									"end": 6339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6209,
									"end": 6345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6156,
									"end": 6345,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6537,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 6351,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6411,
									"end": 6531,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 6411,
									"end": 6531,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6428,
									"end": 6431,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6421,
									"end": 6426,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6418,
									"end": 6432,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6411,
									"end": 6531,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6411,
									"end": 6531,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 6411,
									"end": 6531,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6482,
									"end": 6521,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 6519,
									"end": 6520,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6482,
									"end": 6521,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 6482,
									"end": 6521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6482,
									"end": 6521,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 6482,
									"end": 6521,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6455,
									"end": 6456,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6448,
									"end": 6453,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6444,
									"end": 6457,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6435,
									"end": 6457,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6435,
									"end": 6457,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6411,
									"end": 6531,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 6411,
									"end": 6531,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6411,
									"end": 6531,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 6411,
									"end": 6531,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6543,
									"end": 7086,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 6543,
									"end": 7086,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6644,
									"end": 6646,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6639,
									"end": 6642,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6636,
									"end": 6647,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6633,
									"end": 7079,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6633,
									"end": 7079,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 6633,
									"end": 7079,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6678,
									"end": 6716,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 6710,
									"end": 6715,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6678,
									"end": 6716,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 6678,
									"end": 6716,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6678,
									"end": 6716,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 6678,
									"end": 6716,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6762,
									"end": 6791,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 6780,
									"end": 6790,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6762,
									"end": 6791,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 6762,
									"end": 6791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6762,
									"end": 6791,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 6762,
									"end": 6791,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6752,
									"end": 6760,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6748,
									"end": 6792,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6945,
									"end": 6947,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6933,
									"end": 6943,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6930,
									"end": 6948,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6927,
									"end": 6976,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6927,
									"end": 6976,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 6927,
									"end": 6976,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6966,
									"end": 6974,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6951,
									"end": 6974,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6951,
									"end": 6974,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6927,
									"end": 6976,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 6927,
									"end": 6976,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6989,
									"end": 7069,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 7045,
									"end": 7067,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 7063,
									"end": 7066,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7045,
									"end": 7067,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 7045,
									"end": 7067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7045,
									"end": 7067,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 7045,
									"end": 7067,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7035,
									"end": 7043,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7018,
									"end": 7029,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6989,
									"end": 7069,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 6989,
									"end": 7069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6989,
									"end": 7069,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 6989,
									"end": 7069,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6648,
									"end": 7079,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6648,
									"end": 7079,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6633,
									"end": 7079,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 6633,
									"end": 7079,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6543,
									"end": 7086,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6543,
									"end": 7086,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6543,
									"end": 7086,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6543,
									"end": 7086,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7209,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 7092,
									"end": 7209,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7146,
									"end": 7154,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7196,
									"end": 7201,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7190,
									"end": 7194,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7186,
									"end": 7202,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 7165,
									"end": 7202,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7165,
									"end": 7202,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7209,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7209,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7209,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7209,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7209,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7215,
									"end": 7384,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 7215,
									"end": 7384,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7259,
									"end": 7265,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7292,
									"end": 7343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 7340,
									"end": 7341,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7336,
									"end": 7342,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7328,
									"end": 7333,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7325,
									"end": 7326,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 7321,
									"end": 7334,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7292,
									"end": 7343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 7292,
									"end": 7343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7292,
									"end": 7343,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 7292,
									"end": 7343,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7288,
									"end": 7344,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7373,
									"end": 7377,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7367,
									"end": 7371,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7363,
									"end": 7378,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7353,
									"end": 7378,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7353,
									"end": 7378,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7266,
									"end": 7384,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7215,
									"end": 7384,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7215,
									"end": 7384,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7215,
									"end": 7384,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7215,
									"end": 7384,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7215,
									"end": 7384,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7389,
									"end": 7684,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 7389,
									"end": 7684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7465,
									"end": 7469,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7611,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 7636,
									"end": 7639,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7630,
									"end": 7634,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7611,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 7611,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7611,
									"end": 7640,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 7611,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7603,
									"end": 7640,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7603,
									"end": 7640,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7673,
									"end": 7676,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7670,
									"end": 7671,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 7666,
									"end": 7677,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7660,
									"end": 7664,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7657,
									"end": 7678,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 7649,
									"end": 7678,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7649,
									"end": 7678,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7389,
									"end": 7684,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7389,
									"end": 7684,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7389,
									"end": 7684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7389,
									"end": 7684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7389,
									"end": 7684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7689,
									"end": 9084,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 7689,
									"end": 9084,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7806,
									"end": 7843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 7839,
									"end": 7842,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7806,
									"end": 7843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 7806,
									"end": 7843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7806,
									"end": 7843,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 7806,
									"end": 7843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7908,
									"end": 7926,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7900,
									"end": 7906,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7897,
									"end": 7927,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7894,
									"end": 7950,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7894,
									"end": 7950,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 7894,
									"end": 7950,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7930,
									"end": 7948,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 7930,
									"end": 7948,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7930,
									"end": 7948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7930,
									"end": 7948,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 7930,
									"end": 7948,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7894,
									"end": 7950,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 7894,
									"end": 7950,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7974,
									"end": 8012,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 8006,
									"end": 8010,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8000,
									"end": 8011,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 7974,
									"end": 8012,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 7974,
									"end": 8012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7974,
									"end": 8012,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 7974,
									"end": 8012,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8059,
									"end": 8126,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 8119,
									"end": 8125,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8111,
									"end": 8117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8105,
									"end": 8109,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8059,
									"end": 8126,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 8059,
									"end": 8126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8059,
									"end": 8126,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 8059,
									"end": 8126,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8153,
									"end": 8154,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8177,
									"end": 8181,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8164,
									"end": 8181,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8164,
									"end": 8181,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8209,
									"end": 8211,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8201,
									"end": 8207,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8198,
									"end": 8212,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8226,
									"end": 8227,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8221,
									"end": 8839,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8221,
									"end": 8839,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8221,
									"end": 8839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 8221,
									"end": 8839,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8883,
									"end": 8884,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8900,
									"end": 8906,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8897,
									"end": 8974,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8897,
									"end": 8974,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 8897,
									"end": 8974,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8949,
									"end": 8958,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8944,
									"end": 8947,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 8940,
									"end": 8959,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8934,
									"end": 8960,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8925,
									"end": 8960,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8925,
									"end": 8960,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8897,
									"end": 8974,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 8897,
									"end": 8974,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9000,
									"end": 9067,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 9060,
									"end": 9066,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9053,
									"end": 9058,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9000,
									"end": 9067,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 9000,
									"end": 9067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9000,
									"end": 9067,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 9000,
									"end": 9067,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8994,
									"end": 8998,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8987,
									"end": 9068,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8856,
									"end": 9078,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8191,
									"end": 9078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 8191,
									"end": 9078,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8221,
									"end": 8839,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 8221,
									"end": 8839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8273,
									"end": 8277,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8269,
									"end": 8278,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 8261,
									"end": 8267,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8257,
									"end": 8279,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8307,
									"end": 8344,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 8339,
									"end": 8343,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8307,
									"end": 8344,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 8307,
									"end": 8344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8307,
									"end": 8344,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 8307,
									"end": 8344,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8366,
									"end": 8367,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8380,
									"end": 8588,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 8380,
									"end": 8588,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8394,
									"end": 8401,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8391,
									"end": 8392,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8402,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8380,
									"end": 8588,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8380,
									"end": 8588,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 8380,
									"end": 8588,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8473,
									"end": 8482,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8468,
									"end": 8471,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8464,
									"end": 8483,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8458,
									"end": 8484,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8450,
									"end": 8456,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8443,
									"end": 8485,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8524,
									"end": 8525,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8516,
									"end": 8522,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8512,
									"end": 8526,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8502,
									"end": 8526,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8502,
									"end": 8526,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8571,
									"end": 8573,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8560,
									"end": 8569,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8556,
									"end": 8574,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8543,
									"end": 8574,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 8543,
									"end": 8574,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8417,
									"end": 8421,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8414,
									"end": 8415,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8410,
									"end": 8422,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8405,
									"end": 8422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8405,
									"end": 8422,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8380,
									"end": 8588,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 8380,
									"end": 8588,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8380,
									"end": 8588,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 8380,
									"end": 8588,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8616,
									"end": 8622,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8607,
									"end": 8614,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8604,
									"end": 8623,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8601,
									"end": 8780,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8601,
									"end": 8780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 8601,
									"end": 8780,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8674,
									"end": 8683,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8669,
									"end": 8672,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8665,
									"end": 8684,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8659,
									"end": 8685,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8717,
									"end": 8765,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 8759,
									"end": 8763,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8751,
									"end": 8757,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8747,
									"end": 8764,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8736,
									"end": 8745,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8717,
									"end": 8765,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 8717,
									"end": 8765,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8717,
									"end": 8765,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 8717,
									"end": 8765,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8709,
									"end": 8715,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8702,
									"end": 8766,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8624,
									"end": 8780,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8601,
									"end": 8780,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 8601,
									"end": 8780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8826,
									"end": 8827,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8822,
									"end": 8823,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8814,
									"end": 8820,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8810,
									"end": 8824,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8806,
									"end": 8828,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8800,
									"end": 8804,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8793,
									"end": 8829,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8228,
									"end": 8839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8228,
									"end": 8839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8228,
									"end": 8839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8191,
									"end": 9078,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 8191,
									"end": 9078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8191,
									"end": 9078,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7781,
									"end": 9084,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7781,
									"end": 9084,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7781,
									"end": 9084,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7689,
									"end": 9084,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7689,
									"end": 9084,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7689,
									"end": 9084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1962,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220397a5c4736d14eaf95e8b20544f0efcba71ca205f58ad2a0e269ac907dd1ba4564736f6c63430008110033",
									".code": [
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "9DC29FAC"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "DDCA3F43"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "3E032A3B"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 249,
											"end": 1962,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 351,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 351,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 403,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 403,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 674,
											"end": 697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 674,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 697,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 674,
											"end": 697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 674,
											"end": 697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 674,
											"end": 697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 697,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 907,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 907,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 431,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 431,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 431,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 376,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 376,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 376,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1196,
											"end": 1454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1196,
											"end": 1454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1483,
											"end": 1959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1483,
											"end": 1959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 616,
											"end": 638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 616,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 616,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 616,
											"end": 638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 638,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 616,
											"end": 638,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 616,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 616,
											"end": 638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 638,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 351,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 351,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 351,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 403,
											"end": 424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 674,
											"end": 697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 674,
											"end": 697,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1000,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 982,
											"end": 1041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 982,
											"end": 1041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1096,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1090,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1091,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1073,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1073,
											"end": 1103,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1103,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1073,
											"end": 1103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1069,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1070,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1103,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1103,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1147,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1149,
											"end": 1155,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1119,
											"end": 1156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1156,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 907,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 431,
											"end": 475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 376,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 376,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 376,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 376,
											"end": 396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1307,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1296,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1307,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1307,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1271,
											"end": 1331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1271,
											"end": 1331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1386,
											"end": 1392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1380,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1381,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1363,
											"end": 1385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1393,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1363,
											"end": 1393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1360,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1393,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1393,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1435,
											"end": 1436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1418,
											"end": 1425,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1439,
											"end": 1445,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1409,
											"end": 1446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1409,
											"end": 1446,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1606,
											"end": 1609,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1606,
											"end": 1609,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1599,
											"end": 1609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1599,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1589,
											"end": 1593,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 1579,
											"end": 1584,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1579,
											"end": 1588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1594,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1594,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1594,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1579,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1579,
											"end": 1598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1579,
											"end": 1610,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1610,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1579,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1563,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1574,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1610,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1610,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1546,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 1678,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1714,
											"end": 1722,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1714,
											"end": 1722,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1711,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 1707,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1707,
											"end": 1722,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1707,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1722,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1707,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1696,
											"end": 1701,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1691,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1678,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1678,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1678,
											"end": 1706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1723,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1678,
											"end": 1723,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1723,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1678,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1678,
											"end": 1727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1678,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1662,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1653,
											"end": 1674,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1653,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1674,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1653,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1733,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1733,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1645,
											"end": 1760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1645,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1821,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1848,
											"end": 1851,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1848,
											"end": 1851,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1845,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 1841,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1841,
											"end": 1851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1841,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1841,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1831,
											"end": 1835,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 1821,
											"end": 1826,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1836,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1821,
											"end": 1836,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1836,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1821,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1821,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1821,
											"end": 1852,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1821,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1804,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1815,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1816,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1853,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1853,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1853,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1795,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1791,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1853,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1898,
											"end": 1903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1889,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1880,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1876,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1904,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1904,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1929,
											"end": 1939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1945,
											"end": 1950,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1920,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1951,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 616,
											"end": 638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 616,
											"end": 638,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1435,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1349,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1428,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1413,
											"end": 1429,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1402,
											"end": 1429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1540,
											"end": 1545,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1524,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1546,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1524,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1547,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1773,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1559,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1684,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1763,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1761,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1699,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1766,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1699,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1773,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1856,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1779,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1816,
											"end": 1823,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1856,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 1980,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1862,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1967,
											"end": 1972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1949,
											"end": 1973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1949,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1937,
											"end": 1974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 1980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 1980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2119,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2200,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2130,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2201,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2130,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2412,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2295,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2585,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2660,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2611,
											"end": 2616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2607,
											"end": 2661,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 2667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2739,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2728,
											"end": 2763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2728,
											"end": 2763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2866,
											"end": 2871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2848,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 2846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2873,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2888,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2775,
											"end": 2897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 2954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3003,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3170,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3048,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3139,
											"end": 3144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3121,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3121,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3111,
											"end": 3146,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3101,
											"end": 3164,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3162,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3164,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3101,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3267,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3267,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3276,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3309,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3276,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3176,
											"end": 3315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3176,
											"end": 3315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3795,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3321,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3403,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3432,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3444,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3449,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3533,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 3414,
											"end": 3533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3452,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3452,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 3452,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3452,
											"end": 3531,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3452,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3533,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 3414,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3572,
											"end": 3573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3597,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3642,
											"end": 3649,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3639,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3631,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3597,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3597,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3597,
											"end": 3650,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3597,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3587,
											"end": 3650,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3587,
											"end": 3650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3699,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3770,
											"end": 3777,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3750,
											"end": 3759,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3768,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3725,
											"end": 3778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3725,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3715,
											"end": 3778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3715,
											"end": 3778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3321,
											"end": 3795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4130,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3801,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3911,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3888,
											"end": 3895,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 3907,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3880,
											"end": 3912,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3877,
											"end": 3996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3915,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3915,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 3915,
											"end": 3994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3915,
											"end": 3994,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3915,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3996,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3877,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4105,
											"end": 4112,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4102,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4094,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4060,
											"end": 4113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4060,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4050,
											"end": 4113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4050,
											"end": 4113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4130,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4130,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 4130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4254,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 4136,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 4241,
											"end": 4246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 4223,
											"end": 4247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4223,
											"end": 4247,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 4223,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4218,
											"end": 4221,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4211,
											"end": 4248,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4357,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4393,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4380,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4394,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4470,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4457,
											"end": 4474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4454,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 4404,
											"end": 4475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4404,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4482,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4260,
											"end": 4482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4488,
											"end": 4668,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 4488,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4536,
											"end": 4613,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4533,
											"end": 4534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4526,
											"end": 4614,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4637,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4630,
											"end": 4631,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4623,
											"end": 4638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4661,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4654,
											"end": 4655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4662,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4674,
											"end": 4994,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 4674,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4756,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4749,
											"end": 4753,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4757,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4802,
											"end": 4803,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4796,
											"end": 4800,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4823,
											"end": 4841,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 4813,
											"end": 4894,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4879,
											"end": 4883,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 4871,
											"end": 4877,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4867,
											"end": 4884,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4884,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4894,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 4813,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4941,
											"end": 4943,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4933,
											"end": 4939,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4944,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4907,
											"end": 4945,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4904,
											"end": 4988,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 4960,
											"end": 4978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4960,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4988,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4904,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4725,
											"end": 4994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4674,
											"end": 4994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4674,
											"end": 4994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4674,
											"end": 4994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4674,
											"end": 4994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5223,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5000,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5174,
											"name": "PUSH",
											"source": 8,
											"value": "43616E6E6F74206D696E74207A65726F206F72206E6567617469766520746F6B"
										},
										{
											"begin": 5136,
											"end": 5137,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 5134,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5209,
											"end": 5215,
											"name": "PUSH",
											"source": 8,
											"value": "656E732E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5192,
											"end": 5207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5216,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5595,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5229,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5371,
											"end": 5374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5451,
											"end": 5454,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5392,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5459,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 5392,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5385,
											"end": 5459,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5385,
											"end": 5459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 5557,
											"end": 5560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5468,
											"end": 5561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5561,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 5468,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5588,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5581,
											"end": 5584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5577,
											"end": 5589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5570,
											"end": 5589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5570,
											"end": 5589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5601,
											"end": 6020,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5601,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5767,
											"end": 5771,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5805,
											"end": 5807,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5794,
											"end": 5803,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5808,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 5863,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5844,
											"end": 5864,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5838,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5825,
											"end": 5842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5818,
											"end": 5865,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5882,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6008,
											"end": 6012,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5882,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5882,
											"end": 6013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5882,
											"end": 6013,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 5882,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 6013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5601,
											"end": 6020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5601,
											"end": 6020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5601,
											"end": 6020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5601,
											"end": 6020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6026,
											"end": 6195,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 6026,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420656E6F7567682062616C616E63652E00000000000000000000000000"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6160,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6150,
											"end": 6164,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6143,
											"end": 6188,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6026,
											"end": 6195,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6026,
											"end": 6195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6567,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 6201,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6428,
											"end": 6430,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 6364,
											"end": 6431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6431,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6364,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6357,
											"end": 6431,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6357,
											"end": 6431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6529,
											"end": 6532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 6440,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6440,
											"end": 6533,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6440,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6558,
											"end": 6560,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6553,
											"end": 6556,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6561,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6561,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6567,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6201,
											"end": 6567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6992,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6573,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6743,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6779,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6754,
											"end": 6780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6754,
											"end": 6780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6816,
											"end": 6836,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6812,
											"end": 6813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6810,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6797,
											"end": 6814,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6790,
											"end": 6837,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6980,
											"end": 6984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 6854,
											"end": 6985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6854,
											"end": 6985,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6854,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6846,
											"end": 6985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6992,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6998,
											"end": 7178,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 6998,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7046,
											"end": 7123,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7124,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7143,
											"end": 7147,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7140,
											"end": 7141,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7133,
											"end": 7148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7167,
											"end": 7171,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7172,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7375,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7184,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7224,
											"end": 7227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 7261,
											"end": 7262,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7243,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7243,
											"end": 7263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7243,
											"end": 7263,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 7243,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7238,
											"end": 7263,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7238,
											"end": 7263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7277,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7277,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7277,
											"end": 7297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7277,
											"end": 7297,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7277,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7297,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7317,
											"end": 7318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7341,
											"end": 7344,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7338,
											"end": 7339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7335,
											"end": 7345,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7332,
											"end": 7368,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7332,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7332,
											"end": 7368,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7348,
											"end": 7366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7332,
											"end": 7368,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7332,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7375,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7375,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7381,
											"end": 7553,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 7381,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7521,
											"end": 7545,
											"name": "PUSH",
											"source": 8,
											"value": "4578636565647320736C69707061676520726174652E00000000000000000000"
										},
										{
											"begin": 7517,
											"end": 7518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7519,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7498,
											"end": 7546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7381,
											"end": 7553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7381,
											"end": 7553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7925,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 7559,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7722,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 7781,
											"end": 7784,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7722,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7722,
											"end": 7789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7722,
											"end": 7789,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7722,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7715,
											"end": 7789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7715,
											"end": 7789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 7887,
											"end": 7890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 7798,
											"end": 7891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7891,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 7798,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 7918,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7911,
											"end": 7914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7907,
											"end": 7919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 8350,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 7931,
											"end": 8350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8097,
											"end": 8101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8137,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8112,
											"end": 8138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8112,
											"end": 8138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8174,
											"end": 8194,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8159,
											"end": 8168,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8155,
											"end": 8172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 8338,
											"end": 8342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 8212,
											"end": 8343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8343,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 8212,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8204,
											"end": 8343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8204,
											"end": 8343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 8350,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 8350,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 8350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 8350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8356,
											"end": 8581,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8356,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8496,
											"end": 8530,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8492,
											"end": 8493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8531,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8565,
											"end": 8573,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8560,
											"end": 8562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8558,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8548,
											"end": 8563,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8541,
											"end": 8574,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8356,
											"end": 8581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8356,
											"end": 8581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8587,
											"end": 8953,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 8587,
											"end": 8953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8729,
											"end": 8732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8750,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 8814,
											"end": 8816,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 8809,
											"end": 8812,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 8750,
											"end": 8817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8750,
											"end": 8817,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 8750,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8743,
											"end": 8817,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8743,
											"end": 8817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8826,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 8915,
											"end": 8918,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8826,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8826,
											"end": 8919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8826,
											"end": 8919,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 8826,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8944,
											"end": 8946,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8939,
											"end": 8942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8935,
											"end": 8947,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8928,
											"end": 8947,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8928,
											"end": 8947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8587,
											"end": 8953,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8587,
											"end": 8953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8587,
											"end": 8953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8587,
											"end": 8953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8959,
											"end": 9378,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 8959,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9125,
											"end": 9129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9165,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9152,
											"end": 9161,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9140,
											"end": 9166,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9140,
											"end": 9166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9212,
											"end": 9221,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9206,
											"end": 9210,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9202,
											"end": 9222,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9198,
											"end": 9199,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9196,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9183,
											"end": 9200,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9176,
											"end": 9223,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9240,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 9366,
											"end": 9370,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9240,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 9240,
											"end": 9371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9240,
											"end": 9371,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 9240,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9232,
											"end": 9371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9232,
											"end": 9371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8959,
											"end": 9378,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8959,
											"end": 9378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8959,
											"end": 9378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8959,
											"end": 9378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9566,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 9384,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9524,
											"end": 9558,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9520,
											"end": 9521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9512,
											"end": 9518,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9501,
											"end": 9559,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9384,
											"end": 9566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9938,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 9572,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 9799,
											"end": 9801,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9794,
											"end": 9797,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9735,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 9735,
											"end": 9802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9735,
											"end": 9802,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 9735,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9728,
											"end": 9802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9728,
											"end": 9802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9811,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 9900,
											"end": 9903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9811,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 9811,
											"end": 9904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9811,
											"end": 9904,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 9811,
											"end": 9904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9929,
											"end": 9931,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9924,
											"end": 9927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9920,
											"end": 9932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 9932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 9932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9938,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10363,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 9944,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10110,
											"end": 10114,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10148,
											"end": 10150,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10137,
											"end": 10146,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10206,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10191,
											"end": 10195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10187,
											"end": 10207,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10183,
											"end": 10184,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10181,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10168,
											"end": 10185,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10161,
											"end": 10208,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10225,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10351,
											"end": 10355,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10225,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 10225,
											"end": 10356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10225,
											"end": 10356,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10225,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10217,
											"end": 10356,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10217,
											"end": 10356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 10363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10369,
											"end": 10563,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 10369,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10429,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10447,
											"end": 10448,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10429,
											"end": 10449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10449,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10429,
											"end": 10449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10424,
											"end": 10449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10463,
											"end": 10483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 10481,
											"end": 10482,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10463,
											"end": 10483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10463,
											"end": 10483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10463,
											"end": 10483,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 10463,
											"end": 10483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10458,
											"end": 10483,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10458,
											"end": 10483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10507,
											"end": 10508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10505,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10500,
											"end": 10509,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10492,
											"end": 10509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10492,
											"end": 10509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10532,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10525,
											"end": 10529,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10522,
											"end": 10533,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10519,
											"end": 10556,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10519,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 10519,
											"end": 10556,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 10536,
											"end": 10554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10536,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10519,
											"end": 10556,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 10519,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10369,
											"end": 10563,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10369,
											"end": 10563,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10369,
											"end": 10563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10369,
											"end": 10563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10369,
											"end": 10563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10569,
											"end": 10979,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 10569,
											"end": 10979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10609,
											"end": 10616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10632,
											"end": 10652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 10650,
											"end": 10651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10632,
											"end": 10652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10652,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 10632,
											"end": 10652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10652,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10666,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 10684,
											"end": 10685,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10666,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10666,
											"end": 10686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10666,
											"end": 10686,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 10666,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10661,
											"end": 10686,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10661,
											"end": 10686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10721,
											"end": 10722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10718,
											"end": 10719,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10723,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 10761,
											"end": 10772,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10743,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10773,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 10743,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10922,
											"end": 10923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 10920,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10909,
											"end": 10924,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10906,
											"end": 10907,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10903,
											"end": 10925,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10883,
											"end": 10884,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10876,
											"end": 10885,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10856,
											"end": 10939,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10833,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 10833,
											"end": 10972,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 10952,
											"end": 10970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10833,
											"end": 10972,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 10833,
											"end": 10972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10617,
											"end": 10979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10569,
											"end": 10979,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10569,
											"end": 10979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10569,
											"end": 10979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10569,
											"end": 10979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10569,
											"end": 10979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10985,
											"end": 11165,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 10985,
											"end": 11165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11033,
											"end": 11110,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11030,
											"end": 11031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11023,
											"end": 11111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11130,
											"end": 11134,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 11127,
											"end": 11128,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11151,
											"end": 11152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11159,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11171,
											"end": 11356,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 11171,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11211,
											"end": 11212,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 11246,
											"end": 11247,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 11228,
											"end": 11248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11223,
											"end": 11248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11223,
											"end": 11248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11262,
											"end": 11282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 11280,
											"end": 11281,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11262,
											"end": 11282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 11262,
											"end": 11282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11262,
											"end": 11282,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 11262,
											"end": 11282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 11282,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11257,
											"end": 11282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11301,
											"end": 11302,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11291,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 11291,
											"end": 11326,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 11306,
											"end": 11324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11291,
											"end": 11326,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 11291,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11348,
											"end": 11349,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11345,
											"end": 11346,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11341,
											"end": 11350,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11336,
											"end": 11350,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11336,
											"end": 11350,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11171,
											"end": 11356,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11171,
											"end": 11356,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11171,
											"end": 11356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11171,
											"end": 11356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11171,
											"end": 11356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"fee()": "ddca3f43",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"slippage()": "3e032a3b",
							"symbol()": "95d89b41",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Swap.sol\":\"Swap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/Swap.sol\":{\"keccak256\":\"0x76c3b20662b3b916f1ad67560b75e75a7188fa90712d33a8265e596cbdb9792f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://19ec4bcf814f7160c0f29d9efec40bec6e037fe8feaf33422c78b5afbbf67df5\",\"dweb:/ipfs/QmRbARxGABVWZXUhJ4uFiE2AAf5MpFYat4YZcrRSvPWPuz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Swap.sol:Swap",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1148,
								"contract": "contracts/Swap.sol:Swap",
								"label": "name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1150,
								"contract": "contracts/Swap.sol:Swap",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1152,
								"contract": "contracts/Swap.sol:Swap",
								"label": "decimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint8"
							},
							{
								"astId": 1156,
								"contract": "contracts/Swap.sol:Swap",
								"label": "balanceOf",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1167,
								"contract": "contracts/Swap.sol:Swap",
								"label": "fee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1169,
								"contract": "contracts/Swap.sol:Swap",
								"label": "slippage",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/Swap.sol:24:5:\n   |\n24 |     constructor(string memory _name, string memory _symbol, uint8 _decimals) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 875,
					"file": "contracts/Swap.sol",
					"start": 706
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							824
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 825,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 824,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								824
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							226
						]
					},
					"id": 227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1494:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1519:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1542:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1568:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 203,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1585:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1604:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 207,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:2"
									},
									"scope": 226,
									"src": "1446:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1950:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1988:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:2"
									},
									"scope": 226,
									"src": "1934:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2240:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:2"
									},
									"scope": 226,
									"src": "2189:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 227,
							"src": "620:1631:2",
							"usedErrors": []
						}
					],
					"src": "114:2138:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							802
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							226
						],
						"SafeERC20": [
							507
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 191,
							"src": "140:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 227,
							"src": "164:46:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 231,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 803,
							"src": "211:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 232,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 507,
							"linearizedBaseContracts": [
								507
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 235,
									"libraryName": {
										"id": 233,
										"name": "Address",
										"nameLocations": [
											"737:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 802,
										"src": "737:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:3",
									"typeName": {
										"id": 234,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "865:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "895:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 249,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "925:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 157,
																		"src": "925:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 252,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "950:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "954:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 247,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 245,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "875:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "875:86:3"
											}
										]
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 236,
														"name": "IERC20",
														"nameLocations": [
															"794:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "794:6:3"
													},
													"referencedDeclaration": 190,
													"src": "794:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "816:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "836:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:3"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:3"
									},
									"scope": 507,
									"src": "763:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1102:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "1132:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 274,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1162:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "1162:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 277,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "1191:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 278,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "1197:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "1201:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 272,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 270,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1112:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:3"
											}
										]
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1009:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 259,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1009:6:3"
													},
													"referencedDeclaration": 190,
													"src": "1009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1031:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1053:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1073:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:3"
									},
									"scope": 507,
									"src": "974:241:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1581:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "1830:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 304,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$507",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$507",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 303,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 302,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 306,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 290,
																					"src": "1877:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 300,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 288,
																					"src": "1846:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:3",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 167,
																				"src": "1846:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "2001:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 319,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "2031:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2031:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 322,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2055:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 323,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2064:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 317,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 315,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1981:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:3"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1505:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 287,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 286,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1505:6:3"
													},
													"referencedDeclaration": 190,
													"src": "1505:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1527:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1552:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:3"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:3"
									},
									"scope": 507,
									"src": "1475:603:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2200:194:3",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "2210:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 344,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$507",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$507",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 342,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 346,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "2264:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 340,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "2233:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:3",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "2233:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 348,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "2275:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2310:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 355,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "2340:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2340:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 358,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "2364:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 359,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "2373:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 353,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 351,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2290:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:3"
											}
										]
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2124:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 329,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2124:6:3"
													},
													"referencedDeclaration": 190,
													"src": "2124:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2146:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:3"
									},
									"scope": 507,
									"src": "2084:310:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2516:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:3",
												"statements": [
													{
														"assignments": [
															375
														],
														"declarations": [
															{
																"constant": false,
																"id": 375,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2550:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 384,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 380,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$507",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$507",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 378,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 382,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "2604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 376,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2573:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 167,
																"src": "2573:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 386,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "2634:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 387,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "2650:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 385,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 391,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:3"
													},
													{
														"assignments": [
															393
														],
														"declarations": [
															{
																"constant": false,
																"id": 393,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2715:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 397,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 394,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2738:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 395,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "2753:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 399,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2792:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 402,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "2822:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 177,
																				"src": "2822:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 405,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 369,
																			"src": "2846:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 406,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2855:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 400,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:3",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 398,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "2772:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:3"
													}
												]
											}
										]
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2440:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 365,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2440:6:3"
													},
													"referencedDeclaration": 190,
													"src": "2440:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2462:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2487:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:3"
									},
									"scope": 507,
									"src": "2400:486:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "3107:257:3",
										"statements": [
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "3117:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3152:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 434,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3139:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "3139:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3181:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "3188:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3197:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3204:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 446,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "3214:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 447,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "3217:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 448,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "3220:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:3",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "3168:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:3"
											},
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "3232:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [
														{
															"id": 455,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 453,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3253:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "3253:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "3290:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 460,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "3304:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2921:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$226",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 413,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 226,
														"src": "2921:12:3"
													},
													"referencedDeclaration": 226,
													"src": "2921:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$226",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2949:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2972:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3020:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3046:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 424,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3063:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3082:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:3"
									},
									"scope": 507,
									"src": "2892:472:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "3817:636:3",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 505,
														"src": "4166:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 477,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "4220:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "4200:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 596,
														"src": "4192:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 488,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4275:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "4271:176:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "4298:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 495,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 478,
																				"src": "4370:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 496,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 498,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 493,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 492,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3776:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "3776:6:3"
													},
													"referencedDeclaration": 190,
													"src": "3776:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3790:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:3"
									},
									"scope": 507,
									"src": "3747:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 508,
							"src": "707:3748:3",
							"usedErrors": []
						}
					],
					"src": "115:4341:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							802
						]
					},
					"id": 803,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 510,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 802,
							"linearizedBaseContracts": [
								802
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 518,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 517,
												"id": 523,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 802,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 536,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$802",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$802",
																				"typeString": "library Address"
																			}
																		],
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 534,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 539,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													545,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 558,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 544,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 552,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 546,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 548,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 554,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 802,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 569,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															576,
															596
														],
														"referencedDeclaration": 596,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 574,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 802,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 592,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 588,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															616,
															666
														],
														"referencedDeclaration": 666,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 587,
												"id": 594,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 802,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 609,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 611,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 608,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															616,
															666
														],
														"referencedDeclaration": 666,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 607,
												"id": 614,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 802,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 633,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$802",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$802",
																				"typeString": "library Address"
																			}
																		],
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 631,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 636,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 643,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 642,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													649,
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 648,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 650,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"arguments": [
														{
															"id": 656,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 652,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 654,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 660,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 661,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 662,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 659,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 629,
												"id": 664,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 624,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 802,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 677,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 676,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															683,
															718
														],
														"referencedDeclaration": 718,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 675,
												"id": 681,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 802,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 697,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 696,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													703,
													705
												],
												"declarations": [
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 702,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 705,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 704,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"arguments": [
														{
															"id": 708,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 706,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 712,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 713,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 714,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 711,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 694,
												"id": 716,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 689,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 802,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 728,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															735,
															770
														],
														"referencedDeclaration": 770,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 727,
												"id": 733,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 725,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 802,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 749,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 748,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													755,
													757
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 754,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 757,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 756,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"initialValue": {
													"arguments": [
														{
															"id": 760,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 758,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 764,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 765,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 766,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 763,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 746,
												"id": 768,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 802,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "7721:582:4",
										"statements": [
											{
												"condition": {
													"id": 782,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 798,
													"nodeType": "Block",
													"src": "7792:505:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 786,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "8234:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 793,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 777,
																					"src": "8259:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 792,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 795,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:4"
																	}
																]
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "7872:415:4",
															"trueBody": {
																"id": 791,
																"nodeType": "Block",
																"src": "7899:329:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:4"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 775,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 775,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 790,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 799,
												"nodeType": "IfStatement",
												"src": "7731:566:4",
												"trueBody": {
													"id": 785,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 783,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 781,
															"id": 784,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 774,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 802,
									"src": "7561:742:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 803,
							"src": "194:8111:4",
							"usedErrors": []
						}
					],
					"src": "101:8205:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							824
						]
					},
					"id": 825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 805,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 824,
							"linearizedBaseContracts": [
								824
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 810,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 809,
												"id": 812,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 824,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 819,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 818,
												"id": 821,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 824,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 825,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1136
						]
					},
					"id": 1137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 826,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 827,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1136,
							"linearizedBaseContracts": [
								1136
							],
							"name": "SafeMath",
							"nameLocation": "490:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "717:140:6",
										"statements": [
											{
												"id": 857,
												"nodeType": "UncheckedBlock",
												"src": "727:124:6",
												"statements": [
													{
														"assignments": [
															840
														],
														"declarations": [
															{
																"constant": false,
																"id": 840,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 857,
																"src": "751:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 839,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 844,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 842,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "767:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 845,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 846,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "790:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 852,
														"nodeType": "IfStatement",
														"src": "782:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 838,
															"id": 851,
															"nodeType": "Return",
															"src": "793:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 854,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "838:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 855,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 838,
														"id": 856,
														"nodeType": "Return",
														"src": "824:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "657:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "668:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:6"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "702:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 834,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "708:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:6"
									},
									"scope": 1136,
									"src": "641:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "1078:113:6",
										"statements": [
											{
												"id": 885,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 871,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "1116:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 872,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "1120:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 878,
														"nodeType": "IfStatement",
														"src": "1112:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 876,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 870,
															"id": 877,
															"nodeType": "Return",
															"src": "1123:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 880,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "1168:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 881,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "1172:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 883,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 870,
														"id": 884,
														"nodeType": "Return",
														"src": "1154:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1018:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1029:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:6"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1063:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 866,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1069:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:6"
									},
									"scope": 1136,
									"src": "1002:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "1415:417:6",
										"statements": [
											{
												"id": 927,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 899,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "1683:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 906,
														"nodeType": "IfStatement",
														"src": "1679:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 904,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 898,
															"id": 905,
															"nodeType": "Return",
															"src": "1691:16:6"
														}
													},
													{
														"assignments": [
															908
														],
														"declarations": [
															{
																"constant": false,
																"id": 908,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 927,
																"src": "1721:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 907,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 912,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 910,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "1737:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 913,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "1756:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 914,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "1760:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 916,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "1765:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 922,
														"nodeType": "IfStatement",
														"src": "1752:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 920,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 898,
															"id": 921,
															"nodeType": "Return",
															"src": "1768:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 924,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "1813:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 925,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 898,
														"id": 926,
														"nodeType": "Return",
														"src": "1799:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1355:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1366:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:6"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1400:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1406:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:6"
									},
									"scope": 1136,
									"src": "1339:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "2057:114:6",
										"statements": [
											{
												"id": 955,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 941,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "2095:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 948,
														"nodeType": "IfStatement",
														"src": "2091:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 946,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 940,
															"id": 947,
															"nodeType": "Return",
															"src": "2103:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 950,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "2148:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 951,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "2152:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 953,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 940,
														"id": 954,
														"nodeType": "Return",
														"src": "2134:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "1997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2008:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:6"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2042:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 936,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2048:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:6"
									},
									"scope": 1136,
									"src": "1981:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "2406:114:6",
										"statements": [
											{
												"id": 983,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 969,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "2444:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 976,
														"nodeType": "IfStatement",
														"src": "2440:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 974,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 968,
															"id": 975,
															"nodeType": "Return",
															"src": "2452:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 978,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "2497:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 979,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "2501:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 981,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 968,
														"id": 982,
														"nodeType": "Return",
														"src": "2483:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "2346:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "2357:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "2391:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 964,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "2397:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:6"
									},
									"scope": 1136,
									"src": "2330:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "2822:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 995,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2839:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 996,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "2843:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 994,
												"id": 998,
												"nodeType": "Return",
												"src": "2832:12:6"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2768:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2779:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:6"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2813:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:6"
									},
									"scope": 1136,
									"src": "2755:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "3189:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "3206:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1011,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "3210:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1009,
												"id": 1013,
												"nodeType": "Return",
												"src": "3199:12:6"
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "3135:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "3146:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:6"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "3180:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:6"
									},
									"scope": 1136,
									"src": "3122:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "3532:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1025,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "3549:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1026,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "3553:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1024,
												"id": 1028,
												"nodeType": "Return",
												"src": "3542:12:6"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "3478:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "3489:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:6"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "3523:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:6"
									},
									"scope": 1136,
									"src": "3465:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "3917:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1040,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "3934:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1041,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "3938:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1039,
												"id": 1043,
												"nodeType": "Return",
												"src": "3927:12:6"
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "3863:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "3874:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:6"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "3908:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:6"
									},
									"scope": 1136,
									"src": "3850:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "4466:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1055,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "4483:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1056,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "4487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1058,
												"nodeType": "Return",
												"src": "4476:12:6"
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "4412:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "4423:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:6"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "4457:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:6"
									},
									"scope": 1136,
									"src": "4399:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "5084:106:6",
										"statements": [
											{
												"id": 1083,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1073,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "5126:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1074,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "5131:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1076,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "5134:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1072,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1078,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "5168:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1080,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "5172:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1071,
														"id": 1082,
														"nodeType": "Return",
														"src": "5161:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "4981:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "5000:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "5019:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "5075:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:6"
									},
									"scope": 1136,
									"src": "4959:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "5799:105:6",
										"statements": [
											{
												"id": 1108,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1098,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "5841:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1101,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "5848:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1097,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1103,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1104,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "5882:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1105,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "5886:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1096,
														"id": 1107,
														"nodeType": "Return",
														"src": "5875:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "5696:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "5715:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "5734:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1091,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:6"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "5790:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:6"
									},
									"scope": 1136,
									"src": "5674:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "6675:105:6",
										"statements": [
											{
												"id": 1133,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1123,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "6717:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1126,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "6724:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1122,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1128,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "6758:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "6762:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1121,
														"id": 1132,
														"nodeType": "Return",
														"src": "6751:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "6572:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "6591:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "6610:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "6666:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:6"
									},
									"scope": 1136,
									"src": "6550:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1137,
							"src": "482:6300:6",
							"usedErrors": []
						}
					],
					"src": "107:6676:6"
				},
				"id": 6
			},
			"contracts/Swap.sol": {
				"ast": {
					"absolutePath": "contracts/Swap.sol",
					"exportedSymbols": {
						"Address": [
							802
						],
						"Context": [
							824
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							226
						],
						"Ownable": [
							112
						],
						"SafeERC20": [
							507
						],
						"SafeMath": [
							1136
						],
						"Swap": [
							1357
						]
					},
					"id": 1358,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 508,
							"src": "67:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 113,
							"src": "134:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 1137,
							"src": "188:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1142,
										"name": "Ownable",
										"nameLocations": [
											"266:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "266:7:7"
									},
									"id": 1143,
									"nodeType": "InheritanceSpecifier",
									"src": "266:7:7"
								}
							],
							"canonicalName": "Swap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1357,
							"linearizedBaseContracts": [
								1357,
								112,
								824
							],
							"name": "Swap",
							"nameLocation": "258:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1146,
									"libraryName": {
										"id": 1144,
										"name": "SafeMath",
										"nameLocations": [
											"287:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1136,
										"src": "287:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "281:27:7",
									"typeName": {
										"id": 1145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "300:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 1148,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "365:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "351:18:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1147,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "351:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 1150,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "390:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "376:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1149,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "376:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 1152,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "416:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "403:21:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1151,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "403:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 1156,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "466:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "431:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1155,
										"keyType": {
											"id": 1153,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "439:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "431:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1154,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "450:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1164,
									"name": "Transfer",
									"nameLocation": "488:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "513:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "497:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "535:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "519:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "547:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:57:7"
									},
									"src": "482:72:7"
								},
								{
									"constant": false,
									"functionSelector": "ddca3f43",
									"id": 1167,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "631:3:7",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "616:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "616:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "637:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e032a3b",
									"id": 1169,
									"mutability": "mutable",
									"name": "slippage",
									"nameLocation": "689:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "674:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1168,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "674:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "786:89:7",
										"statements": [
											{
												"expression": {
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1178,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "797:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "804:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "797:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "797:12:7"
											},
											{
												"expression": {
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1182,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "820:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "829:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "820:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "820:16:7"
											},
											{
												"expression": {
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1186,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "847:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1187,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "858:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "847:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "847:20:7"
											}
										]
									},
									"id": 1191,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "732:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "718:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1170,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "718:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "753:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "739:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1172,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "739:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "768:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "762:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1174,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "762:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:61:7"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:0:7"
									},
									"scope": 1357,
									"src": "706:169:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "971:193:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1201,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "990:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "999:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "990:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206d696e74207a65726f206f72206e6567617469766520746f6b656e732e",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1002:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4",
																"typeString": "literal_string \"Cannot mint zero or negative tokens.\""
															},
															"value": "Cannot mint zero or negative tokens."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a91bae64f1c3580e9365e47f7e62114aa5edb25049a64cbe0cf38f6f35801c4",
																"typeString": "literal_string \"Cannot mint zero or negative tokens.\""
															}
														],
														"id": 1200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "982:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "982:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "982:59:7"
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1207,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1052:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1209,
														"indexExpression": {
															"id": 1208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "1062:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1052:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "1096:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1210,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "1073:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1212,
																"indexExpression": {
																	"id": 1211,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "1083:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1073:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1092:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1000,
															"src": "1073:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1073:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1052:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1052:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1136:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1128:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1219,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1128:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1128:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "1140:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "1149:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1218,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1119:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "EmitStatement",
												"src": "1114:42:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1198,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1197,
												"name": "onlyOwner",
												"nameLocations": [
													"961:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "961:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "961:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "916:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "929:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "921:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "946:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "938:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:33:7"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:7"
									},
									"scope": 1357,
									"src": "907:257:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "1260:194:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1238,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "1279:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1240,
																"indexExpression": {
																	"id": 1239,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "1289:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1279:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1241,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "1301:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1279:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e63652e",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1309:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070",
																"typeString": "literal_string \"Not enough balance.\""
															},
															"value": "Not enough balance."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070",
																"typeString": "literal_string \"Not enough balance.\""
															}
														],
														"id": 1237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1271:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1271:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "1271:60:7"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1246,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1342:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1248,
														"indexExpression": {
															"id": 1247,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "1352:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1342:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1253,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "1386:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1249,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "1363:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1251,
																"indexExpression": {
																	"id": 1250,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "1373:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1363:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1382:3:7",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1015,
															"src": "1363:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1363:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1342:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "1342:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1258,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "1418:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1435:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1427:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1259,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1427:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1427:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1263,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "1439:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1257,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1409:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1409:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1265,
												"nodeType": "EmitStatement",
												"src": "1404:42:7"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1235,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1234,
												"name": "onlyOwner",
												"nameLocations": [
													"1250:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1250:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1250:9:7"
										}
									],
									"name": "burn",
									"nameLocation": "1205:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1218:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1210:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1235:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1227:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:33:7"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1260:0:7"
									},
									"scope": 1357,
									"src": "1196:258:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "1535:424:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1275,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "1554:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1278,
																"indexExpression": {
																	"expression": {
																		"id": 1276,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1564:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1568:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1564:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1554:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31303030",
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1599:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1285,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "1606:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1599:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31303030",
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1589:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				}
																			],
																			"expression": {
																				"id": 1279,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1271,
																				"src": "1579:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1585:3:7",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1030,
																			"src": "1579:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1579:15:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1595:3:7",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1045,
																	"src": "1579:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1579:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1554:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e63652e",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1612:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070",
																"typeString": "literal_string \"Not enough balance.\""
															},
															"value": "Not enough balance."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6eda769ef148ae7daceea0807fba3bdb2fa3b4cb61ab4c0c9299db72934c070",
																"typeString": "literal_string \"Not enough balance.\""
															}
														],
														"id": 1274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1546:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1546:88:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "1546:88:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1293,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "1653:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1295,
																	"indexExpression": {
																		"id": 1294,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "1663:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1653:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1296,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "1669:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1653:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "31303030",
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1728:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31303030",
																					"id": 1305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1707:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1306,
																					"name": "slippage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1169,
																					"src": "1714:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1707:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1302,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1271,
																						"src": "1696:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 1298,
																							"name": "balanceOf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1156,
																							"src": "1678:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1300,
																						"indexExpression": {
																							"id": 1299,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1269,
																							"src": "1688:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1678:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1301,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1692:3:7",
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1000,
																					"src": "1678:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1678:24:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1703:3:7",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1030,
																			"src": "1678:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1678:45:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1724:3:7",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1045,
																	"src": "1678:49:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1678:55:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1653:80:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636565647320736c69707061676520726174652e",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1735:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f",
																"typeString": "literal_string \"Exceeds slippage rate.\""
															},
															"value": "Exceeds slippage rate."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_098e9c6156a30067b91ec70c55804adc752724def16fd6701b62ba87bbfbaf3f",
																"typeString": "literal_string \"Exceeds slippage rate.\""
															}
														],
														"id": 1292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1645:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1645:115:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "1645:115:7"
											},
											{
												"expression": {
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1316,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1771:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1319,
														"indexExpression": {
															"expression": {
																"id": 1317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1781:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1785:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1781:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1771:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31303030",
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1841:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1331,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "1848:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1841:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31303030",
																				"id": 1327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1831:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				}
																			],
																			"expression": {
																				"id": 1325,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1271,
																				"src": "1821:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1827:3:7",
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1030,
																			"src": "1821:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1821:15:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1837:3:7",
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1045,
																	"src": "1821:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1821:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1320,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "1795:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1323,
																"indexExpression": {
																	"expression": {
																		"id": 1321,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1805:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1809:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1805:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1795:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1817:3:7",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1015,
															"src": "1795:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1795:58:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1771:82:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "1771:82:7"
											},
											{
												"expression": {
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1337,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1864:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1339,
														"indexExpression": {
															"id": 1338,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "1874:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1864:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1344,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "1898:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1340,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "1880:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1342,
																"indexExpression": {
																	"id": 1341,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "1890:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1880:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1894:3:7",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1000,
															"src": "1880:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1880:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1864:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "1864:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1349,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1929:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1933:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1929:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1351,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "1941:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1352,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "1945:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1348,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1920:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1920:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "EmitStatement",
												"src": "1915:36:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1492:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1509:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "1501:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1521:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "1513:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:27:7"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1535:0:7"
									},
									"scope": 1357,
									"src": "1483:476:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1358,
							"src": "249:1713:7",
							"usedErrors": []
						}
					],
					"src": "40:1924:7"
				},
				"id": 7
			}
		}
	}
}